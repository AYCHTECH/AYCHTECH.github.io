<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>오픈소스컨설팅 기술 블로그</title>
    <description>기술을 나눕니다. 함께 성장합니다.
Sharing Tech. Growing Together.
</description>
    <link>http://192.168.0.62:4000/</link>
    <atom:link href="http://192.168.0.62:4000/rss" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 03 Aug 2018 09:40:11 +0900</pubDate>
    <lastBuildDate>Fri, 03 Aug 2018 09:40:11 +0900</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>리눅스 파일 시스템 이해하기 : ext4</title>
        <description>&lt;h1 id=&quot;원문-출처&quot;&gt;원문 출처&lt;/h1&gt;

&lt;p&gt;본 글은 아래의 링크에 대한 한글 번역본입니다. [https://opensource.com/article/18/4/ext4-filesystem]
&lt;img src=&quot;/files/post/filesystem/rh_003499_01_linux11x_cc.png&quot; alt=&quot;Image by : opensource.com&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이전 배포판은 ext3, ext2 그리고 더 멀리 돌아가서 ext 를 기본으로 했었던 것처럼 현대 리눅스 배포판의 대부분은 ext4 파일시스템을 기본으로 합니다.
(역자주: 현재는 suse 계열은 btrfs로 centos계열은 xfs가 기본으로 변경되었음.)&lt;/p&gt;

&lt;p&gt;리눅스나 파일시스템이 처음 접한다면, ext3에 보다 추가된 ext4 기능에 대해 궁금할 것입니다. 또한, 현재 대안으로 나타나고 있는  btrfs, xfs, zfs에 비해 여전히 강점이 있는지도 궁금할 것입니다.&lt;/p&gt;

&lt;p&gt;이 문서에서 파일시스템에 대한 모든것을 다룰 수는 없겠지만 우리는 리눅스의 파일시스템을 간단히 살펴보고, 현황과 전망에 대해서 이야기 할것입니다. 이글은 위키 피디아와 ext4에 관한 kernel.org 사이트와 경험을 바탕으로 작성되었습니다.&lt;/p&gt;

&lt;h1 id=&quot;ext의-역사-요약&quot;&gt;ext의 역사 요약&lt;/h1&gt;
&lt;h2 id=&quot;minix-파일-시스템&quot;&gt;MINIX 파일 시스템&lt;/h2&gt;
&lt;p&gt;ext 파일시스템 전에, MINIX 파일 시스템이 있었습니다. MINIX는 IBM PC/AT 마이크로 컴퓨터를 위한 유닉스를 표방한 매우 작은  운영 체제였습니다. 1987년에 Andrew Tannenbaum은 교육 목적으로 MINIX를 개발하였고, 소스 코드를 발표했습니다.
&lt;img src=&quot;/files/post/filesystem/ibm_pc_at.jpg&quot; alt=&quot;IBM's mid-1980s PC/AT, MBlairMartin, CC BY-SA 4.0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;MINIX의 소스코드를 보는것은 가능했지만, 그것은 실제 무료 오픈소스 소프트웨어(FOSS)는 아니였습니다.  Tannebaum의 책은 비용과 라이센스 금액를 합해서 69 달러에 판매되었습니다.  그러나,  그 당시로서는 파격적으로 저렴한 가격이여서,  원래목적이였던 간단한 교육목적을 넘어서 급속히 확산되었습니다.&lt;/p&gt;

&lt;p&gt;1990년대에 전 세계의 대학가에서 MINIX를 설치가 널리 퍼졌고, 이것은 Linus Torvalds는 1991년에 발표한 최초의 리눅스 커널 개발을 위해 MINIX 를 사용하였고, 이 리눅스커널을 1992년 12월에 GPL로 발표하게 됩니다.&lt;/p&gt;

&lt;p&gt;파일시스템 이야기로 돌아가보자면, MINIX는 자체 파일시스템이 있었고, 초기 리눅스 역시 같은 파일시스템이었으나, 이는 장난감 수준의 파일시스템이었습니다. — MINIX 파일 시스템은 파일이름은 14 문자만 가능했으며, 단지 64MB의 저장공간만의 사용이 가능했습니다. 1991년에 이미 하드 드라이브의 크기가 40-140MB 크기였으니, 리눅스에는 더 향상된 파일 시스템이 필요했습니다.&lt;/p&gt;

&lt;h2 id=&quot;ext&quot;&gt;ext&lt;/h2&gt;
&lt;p&gt;Linus는 리눅스 커널에 초보적인 파일시스템을 사용하는 동안, Rémy Card는 첫번째 ext 파일 시스템에서 만들게 됩니다. 1992년에 처음 구현된 ext 는 - 리눅스가 발표된지 1년도 안된 시점- MINIX의 가장 최악의 문제를 해결했습니다.&lt;/p&gt;

&lt;p&gt;1992년, ext는 Linux 커널에 새로운 추상화된 가상 파일 시스템 (VFS)을 사용했습니다. 이전의 MINIX 파일 시스템과 달리, ext은 최대 2GB의 저장 공간을 다룰 수 있고, 파일이름으로  255자를 사용할수 있었습니다.&lt;/p&gt;

&lt;p&gt;하지만 ext는 원시적인 타임스탬프(파일당 오직 한개의 타임스탬프- 오늘날 익숙한 3개의 타임스탬프 -inode ,파일 접근,수정 용도)때문에 ext는 불과 1년 후, ext2로 대체되게 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;ext2&quot;&gt;ext2&lt;/h2&gt;
&lt;p&gt;Rémy는 ext 파일 시스템의 한계를 인식하고 그것을 대체하기 위한 ext2 파일 시스템은 설계하게 됩니다. ext는 장난감 수준이였지만 ext2는 BSD’s Berkeley Fast File System과 동일한 원칙을 따라 상업용 파일시스템으로 설계되었습니다.&lt;/p&gt;

&lt;p&gt;ext2는 파일크기가 gigabyte이상 파일시스템 크기는 terabyte 이상 사용가능하게 하며, 1990년대 파일시스템의 주류로 자리 잡았습니다. 빠르고 광범위하게 Linux커널과 MINIX 에도 채택되었으며, third-party 모듈을 통해 MacOS와 Windows에서 사용할 수 있도록 만들어졌습니다.&lt;/p&gt;

&lt;p&gt;하지만 ext2파일 시스템은 여전히 해결해야 할 문제가 있었는데 이는 1990년대의 대부분의 파일 시스템과 마찬가지로 데이터를 디스크에 쓰는 동안 시스템이 크래쉬 상황이나 전원이 끊어지면 심각한 손상을 입는다는 것이었습니다. 시간이 지남에 따라 단편화(여러 위치에 단일 파일을 물리적으로 회전 디스크에 분산 저장)로 인해 성능이 크게 저하되기도 했습니다.&lt;/p&gt;

&lt;p&gt;이러한 문제에도 불구하고 ext2는 오늘날에도 특수한 상황에서(가장 흔하게 휴대용 USB 드라이브 형태로) 여전히 사용되고 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;ext3&quot;&gt;ext3&lt;/h2&gt;
&lt;p&gt;ext2를 채택된 지 6년 후인 1998년 Stephen Tweedie는 자신이 작업중인 상당히 개선된 버전의 파일시스템을 발표했습니다. 이것은 ext3로 2001년 11월에 리눅스 커널 버전 2.4.15에 채택되었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/post/filesystem/packard_bell_pc.jpg&quot; alt=&quot;Mid-1990s Packard Bell computer, Spacekid, CC0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ext2는 대부분 Linux 배포 환경에서 매우 잘 실행되었지만 (FAT, FAT32, HFS및 다른 파일 시스템처럼) 정전 시 심각한 손상이 발생하기 쉬웠습니다. 파일 시스템에 데이터를 쓰는 동안 전원이 끊어지면 inconsistent state -(반은 쓰여졌고, 반은 쓰여지지 않은 상태)로 남게 됩니다. 이로 인해 저장되는 파일과 관련이 없는 큰 파일이 손실또는 손상되거나 심지어, 전체 파일시스템을 조작할수 없는 상태를 야기할수 있었습니다.&lt;/p&gt;

&lt;p&gt;1990년대 후반, Ext3과 Microsoft NTFS와 같은 파일 시스템은 이 문제를 journaling을 사용하여 해결하게 됩니다. journal은 write 트랜잭션이 일어나는 디스크에 특정영역을 할당해 두고, 트랜잭션이 디스크에 쓰는 것을 완료하면 journal안의 데이터를 commit하게 되고, 해당 작업이 commit 되기전에 시스템이 손상을 입는다면 새로 재부팅된 시스템은 이를 불완전한 처리로 인식하고 저널영역만 없애고, 기존 파일시스템의 영역은 원래상태로 남겨두는 작업을 하게 됩니다.&lt;/p&gt;

&lt;p&gt;즉, 작업 중인 파일이 여전히 손실될 수 있지만 파일 시스템 자체는 계속 일관되게 유지되고 다른 모든 데이터는 안전하게 보호됩니다. ext3의 리눅스 커널 구현에서 세가지 레벨의 journaling을 사용할 수 있습니다. 여기에는 Journal , Ordered 및 writeback 이 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Journal은 가장 낮은 위험 모드로 파일 시스템에 commit하기 전에 데이터와 메타 데이터를 저널에 모두 기록합니다. 이렇게 하면 그 파일 시스템뿐만 아니라 전체까지 쓰여지는 파일의 일관성이 보장되지만 성능이 크게 저하될 수 있습니다.&lt;/li&gt;
  &lt;li&gt;Ordered은 대부분의 Linux 배포에서 기본 모드입니다. ordered 모드는 journal에 메타 데이터를 쓰지만 파일 시스템에는 데이터를 직접 commit합니다. 이름이 암시하듯이, 작업 순서가 고정되어 있습니다. 첫째, 메타 데이터가 journal에 commit 되고 둘째, 데이터가 파일 시스템에 기록된 다음에서야 journal에 있는 연결된 메타 데이터가 파일 시스템 자체에 쓰여지게 됩니다. 이렇게 하면 문제 발생시 불완전한 쓰기와 관련된 메타 데이터가 저널에 계속 있고 파일 시스템이 저널을 롤백하여 이러한 불완전한 쓰기를 삭제할 수 있습니다. ordered 모드에서 충돌이 발생하면 충돌 중에 파일 또는 파일에 현재 기록되고 있는 파일이 손상될 수 있지만 파일 시스템 자체와 현재 기록 중이 아닌 파일은 안전하게 보호됩니다.&lt;/li&gt;
  &lt;li&gt;Writeback 은 세번째이자 가장 안전하지 않은 journaling 모드입니다. ordered 모드와 같이 writeback모드에서는 메타 데이터가 journal 되지만 데이터는 그렇지 않습니다. ordered 모드와는 달리 메타 데이터 및 데이터는 최상의 성능을 위해서는 어떤 순서로든 작성될 수 있습니다. 이렇게 하면 성능이 크게 향상될 수 있지만 훨씬 덜 안전합니다. writeback모드는 여전히 파일 시스템 자체에 안전을 보장하지만 장애 중 또는 장애 전 기록된 파일은 손실 또는 손상에 취약합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이전의 ext2와 마찬가지로 ext3은 16비트 내부 주소를 사용합니다. 즉, 블록 크기가 4K 인 경우 다룰 수 있는 가장 큰 파일크기는2TB이고,  최대 파일시스템 크기는 16TB입니다.&lt;/p&gt;

&lt;h2 id=&quot;ext4&quot;&gt;ext4&lt;/h2&gt;
&lt;p&gt;Theodore Ts’o(ext3의 핵심 개발자)는 2006년에 ext4 파일 시스템을 발표했고 2년 후 커널 버전 2.6.28d의 Linux에 추가되었습니다. Ts’o는 ex4가 ext3를 발전시킨 기술이지만 여전히 기존 기술에 의존한 중간단계이며, 결국 진정한 차세대 파일 시스템에 의해 대체될 것이라 이야기 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/post/filesystem/dell_precision_380_workstation.jpeg&quot; alt=&quot;Dell Precision 380 workstation, Lance Fisher, CC BY-SA 2.0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ex4는 기능적으로 ext3과 매우 유사하지만, 대용량 파일 시스템 지원을 제공하고 디스크 단편화에 대한 부분과 성능 증가, 타임 스탬프를 개선하였습니다.&lt;/p&gt;

&lt;h1 id=&quot;ext4-vs-ext3&quot;&gt;ext4 vs ext3&lt;/h1&gt;
&lt;p&gt;ext4와 ext3 파일 시스템에서 몇 가지 차이점이 존재하며 이 번 섹션에서 설명합니다.&lt;/p&gt;

&lt;h2 id=&quot;이전-버전과의-호환성&quot;&gt;이전 버전과의 호환성&lt;/h2&gt;
&lt;p&gt;Ex4는 가능한 ext3으로 호환되도록 특별히 설계되었습니다. 이는 ext3파일 시스템을 ext4로 업그레이드할 수 있도록 할 뿐 아니라  ext4 드라이버가 자동으로 ext3 파일 시스템을 ext3 모드로 마운트 할 수 있으므로 두 코드베이스를 별도로 유지 관리 할 필요가 없습니다.&lt;/p&gt;

&lt;h2 id=&quot;large-filesystem&quot;&gt;Large filesystem&lt;/h2&gt;
&lt;p&gt;Ext3파일 시스템이 32비트 주소 지정을 사용하여 최대 2TiB 파일, 16TiB파일 시스템의 제약 사항이 존재합니다.(4KiB 블록 크기의 경우 몇몇 Ext3파일 시스템은 더 작은 블록을 사용합니다)&lt;/p&gt;

&lt;p&gt;Ex4는 48비트 내부 주소 지정을 사용하여 최대 16TB의 파일을 파일시스템 1,000,000TiB( 1 EiB)까지  할당하는 것이 이론적으로 가능합니다. 일부 사용자 환경 유틸리티에 의해 초기 ex4는 16TiB파일 시스템으로 제한되었지만, 2011년부터 e2fsprogs를 통해 16TiB 이상의 ext4 파일 시스템 생성을 지원합니다. 한가지 예로, Red Hat Enterprise Linux는 공식적으로 ex4 파일 시스템을 최대 50TiB까지만 지원하며, 100TiB이하의 ext4 볼륨을 권장합니다.&lt;/p&gt;

&lt;h2 id=&quot;allocation-improvements&quot;&gt;Allocation Improvements&lt;/h2&gt;
&lt;p&gt;Ext4는 스토리지 블록들의 읽기 및 쓰기 성능이 크게 향상될 수 있도록 디스크에 데이터를 쓰기 전에 할당하는 방식의 많은 개선사항을 도입하였습니다.&lt;/p&gt;

&lt;h3 id=&quot;extents-범위&quot;&gt;Extents (범위)&lt;/h3&gt;
&lt;p&gt;extent는 한번에 예약하여 처리할 수 있는 연속된 물리적 블록의 범위입니다. (4KiB 블록 크기라고 가정했을때 128MiB까지) extent 를 활용하면 지정된 파일에 필요한 inode들의 수을 줄이고 단편화를 감소시키며, 큰 용량의 파일을 쓸 때 성능을 향상시킬 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;multiblock-allocation-멀티블록-할당&quot;&gt;Multiblock allocation (멀티블록 할당)&lt;/h3&gt;
&lt;p&gt;Ext3는 새로운 블록이 할당될 때마다 블록할당자를 호출했습니다. 이는 다수의 writer가 동시에 작업을 하는 경우 심한 단편화를 쉽게 발생하게 합니다. 하지만 ext4는 아직 commit 하지 않은 쓰기에 대해 어떻게 할당것인지에 더 나은 의사결정과 여러 개의 쓰기를 하나로 합치도록 지연 할당을 사용합니다.&lt;/p&gt;

&lt;h3 id=&quot;persistent-pre-allocation-지속적-사전-할당&quot;&gt;Persistent pre-allocation (지속적 사전 할당)&lt;/h3&gt;
&lt;p&gt;한 파일에 대해 파일에 대한 디스크 공간을 사전 할당할 때 대부분의 파일 시스템은 해당 블록에 0을 써야 합니다. Ex4는 처음 쓰기 작업을 할 필요없이 공간 가용성을 확보(그리고 이를 위해 인접한 공간을 찾으려고 시도)하게 함으로써 fallocate()를 사용할 수 있도록 합니다. 이러한 작업은 스트리밍 및 데이터베이스 애플리케이션에 의해 기록된 데이터의 쓰기 및 향후 읽기 성능이 향상되도록 합니다.&lt;/p&gt;

&lt;h3 id=&quot;delayed-allocation-지연할당&quot;&gt;Delayed allocation (지연할당)&lt;/h3&gt;
&lt;p&gt;지연 할당은 논쟁의 여지가 있는 기능입니다. 지연 할당은 ext4가 데이터를 디스크에 커밋할 준비가 될 때 데이터를 쓸 실제 블록을 할당하도록 합니다. (반면에 ext3은 데이터가 여전히 쓰기 캐시로 유입되는 동안에도 즉시 블록을 할당합니다)&lt;/p&gt;

&lt;p&gt;캐쉬에 데이터가 누적될 때 블록 할당을 지연하는 것이 파일 시스템이 해당 블록을 할당하는 방법에 대해 보다 효율적으로 선택하여 단편화(쓰기 및 이후 읽기)를 줄이고 성능을 크게 향상합니다. 불행하게도, 프로그래머가 데이터가 디스크로 완전히 플러시 되는 것을 확인하려고 할 때, 특히 fsync()를 호출하도록 작성되지 않은 프로그램에서 데이터 손실 가능성을 높입니다.&lt;/p&gt;

&lt;p&gt;프로그램이 파일을 완전히 다시 쓴다고 가정해 봅시다.&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;O_TRUNC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;레거시 파일시스템의 close(fd) 는 디스크로 플러시될 file 의 내용을 보장하기에 충분합니다. 엄밀히 말하면, 비록 쓰기는 아니지만 파일을 닫은 후 충돌이 발생하면 데이터가 손실될 위험이 거의 없습니다.&lt;/p&gt;

&lt;p&gt;쓰기가 성공하지 못한다면 (프로그램 오류, 디스크 오류, 전원 손실)  파일의 새 버전과 원래 버전이 모두 손실되거나 손상될 수 있습니다. 다른 프로세스가 파일이 기록되는 동안 파일에 접근 하는 경우 손상된 버전을 보게됩니다. 또한 다른 프로세스에서 파일을 열어 놓고 해당 내용이 변경될 것으로 예상하지 않으면 실행 중인 여러 프로그램으로 매핑 된 공유 라이브러리가 충돌할 수 있습니다.&lt;/p&gt;

&lt;p&gt;이러한 문제를 피하기 위해 일부 프로그래머들은 O_TRUNC 를 전혀 사용하지 않습니다. 대신 새 파일에 쓰고 닫은 다음 이전 파일의 이름으로 바꿀겁니다.&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;newfile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;newfile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;file&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;지연할당없는 파일 시스템은 위에서 설명한대로 잠재적 손상 및 충돌 문제를 방지하기에 충분합니다. rename() 은 atomic operation 이기 때문에 충돌에 의해 중단되지 않습니다 그리고 실행 중인 프로그램은 open filehandle 을 가지고 있는 한 이전의 지금은 링크되지않은 file 의 버전을 계속 참조합니다. 그러나 ext4의 지연 할당은 쓰기가 지연되고 순서를 변경할 수 있기때문에 rename(“newfile”, “file”) 은 newfile 의 내용이 실제로 디스크에 쓰여지기 전에 수행될 수 있어 file 의 잘못된 버전을 다시 가져오는 병렬 프로세스의 문제를 야기합니다.&lt;/p&gt;

&lt;p&gt;이를 완화하기 위해 Linux커널(2.6.30 이후)은 이러한 일반적인 코드 사례를 탐지하고 문제의 파일을 즉시 할당하려고 시도합니다. 따라서 데이터 손실의 가능성이 줄어들지만 이를 방지할 수는 없으며, 새 파일에는 전혀 도움이 되지 않습니다. 여러분이 만약 개발자인 경우 참고하셔야 할 내용이 있는데 데이터가 디스크에 즉시 기록되도록 보장하는 유일한 방법은 fsync() 를 알맞게 호출하는 것입니다.&lt;/p&gt;

&lt;h3 id=&quot;unlimited-subdirectories-무제한의-하위디렉토리&quot;&gt;Unlimited subdirectories (무제한의 하위디렉토리)&lt;/h3&gt;
&lt;p&gt;Ext3는 총 32,000개의 하위 디렉토리로 제한되어 있는 반면 ext4는 무제한의 숫자를 허용합니다.
커널 2.6.23으로 시작하는 ext4는 HTree 지수를 사용해 엄청난 수의 하위 디렉토리로 성능 손실을 완화합니다.&lt;/p&gt;

&lt;h3 id=&quot;journal-checksumming-journaling-체크섬&quot;&gt;Journal checksumming (journaling 체크섬)&lt;/h3&gt;
&lt;p&gt;Ext3은 커널의 직접 제어 범위를 벗어나 자체 캐시가 있는 디스크 또는 컨트롤러 장치에 문제가 발생한 저널의 체크섬을 하지 않습니다. 자체 캐시가 있는 컨트롤러나 디스크가 순서를 위반한 경우, Ext3의 journaling 트랜잭션 순서가 해제되어 충돌 동안(또는 이전 기간 동안) 쓰여지고있던 파일이 손상될 수 있습니다.&lt;/p&gt;

&lt;p&gt;이론적으로 이 문제는 파일 시스템이 마운트될 때 barrier=1 옵션을 사용하고 디바이스가 이후 fsync() 호출을 사용하여 쓰기에 대한 문제를 해결하였습니다. 실제로는 스토리지 디바이스와 컨트롤러의 쓰기 작업 성능 개선에 대해서는 어떨지 모르지만 데이터 손상을 막을 수 있는 방법에 대해서는 가능성을 열었습니다.&lt;/p&gt;

&lt;p&gt;저널을 체크섬 하는 것은 파일 시스템이 깨진 후에 일부 항목이 잘못되었거나 최초 마운트 이후 비순차적이거나 유효하지 않은 일부 항목들을 알 수 있도록 합니다. 이로 인해 문제가 발생하는 특정 저널 항목이나 일부 엔트리의 롤백을 피하고 더 나아가 파일시스템을 손상시키는 것을 방지합니다.&lt;/p&gt;

&lt;h3 id=&quot;fast-filesystem-checks-빠른-파일-시스템-검사&quot;&gt;Fast filesystem checks (빠른 파일 시스템 검사)&lt;/h3&gt;
&lt;p&gt;ext3에서 fsck를 할때 전체 파일시스템(삭제되거나 빈 파일까지 포함해서)을 확인합니다. 그에 반해 ext4는 할당되지 않은 블록과 inode 테이블의 섹션을 표시하므로 fsck를 완전히 건너 뛸 수 있습니다. 이렇게하면 대부분의 파일 시스템에서 fsck를 실행할 시간이 크게 줄어들게 되는데 이 기능은 커널 2.6.24부터 적용되었습니다.&lt;/p&gt;

&lt;h3 id=&quot;improved-timestamps-개선-된-타임-스탬프&quot;&gt;Improved timestamps (개선 된 타임 스탬프)&lt;/h3&gt;
&lt;p&gt;Ext3는 시간 스탬프를 1초 단위로 세분화하여 제공합니다. 대부분의 경우 사용할 수 있는 반면, mission-critical 애플리케이션의 경우 보다 엄격한 시간 제어가 요구됩니다. Ext4는 나노초단위로 시간 스탬프를 제공함으로써 엔터프라이즈, 과학기술 영역과 mission-critical 애플리케이션에서 사용이 가능합니다.&lt;/p&gt;

&lt;p&gt;또한 Ext3 파일시스템은 2038년 1월 18일 이후로 날짜를 저장하기에 충분한 비트를 제공하지 않습니다. Ext4는 여기에 2비트를 더 추가하여  “유닉스 시대” 를 408년 더 연장합니다. 만일 2446년에 이것을 읽고 있다면, 아마 이미 더 나은 파일시스템으로 옮겨졌을 것입니다. — 하지만 1970년 1월 1일 UTC 00:00 이후로 시간을 계속 측정 중이라면 제가 죽은 후에라도 매우 기쁠 것 같습니다.&lt;/p&gt;

&lt;h3 id=&quot;online-defragmentation-온라인-조각-모음&quot;&gt;Online defragmentation (온라인 조각 모음)&lt;/h3&gt;
&lt;p&gt;Ext2나 Ext3 모두 온라인 조각 모음을 직접 지원하지 않습니다. —  즉, 마운트된 동안 파일시스템을 조각모음하는 것. Ext2에는 이름에 함축 된대로 e2defrag 라는 유틸리티가 포함되어 있었습니다— 하지만, 파일 시스템을 마운트 하지 않은 상태에서 오프라인으로 실행해야 했습니다.(즉, 이것은 분명히 루트 파일 시스템에서 특히 문제가됩니다.) ext3은 심지어 ext2보다는 심각한 조각화로 인한 어려움을 훨씬 덜 겪었지만 ext3 파일 시스템에 대해 e2defrag를 실행하면 치명적인 손상과 데이터 손실을 초래할 수 있습니다.&lt;/p&gt;

&lt;p&gt;ext3은 원래 “단편화에 영향을받지 않는것”으로 생각했지만 동일한 파일(예 : BitTorrent) 에 대용량 병렬 쓰기 를 하는 프로세스들은 그렇지 않은 것으로 입증되었습니다. Shake 와 같은 몇 가지 사용자 공간 해킹 및 해결 방법을 통해 이러한 문제를 해결했지만 실제 파일 시스템을 인식하는 커널 수준의 조각 모음 프로세스보다 속도가 느리고 다양한 방법으로 만족스럽지 않습니다.&lt;/p&gt;

&lt;p&gt;Ext4는 온라인, 커널 모드, 파일 시스템 인식, 블록 및 확장 수준의 조각 모음 유틸리티 인 e4defrag를 사용해 이 문제를 해결합니다.&lt;/p&gt;

&lt;h1 id=&quot;ongoing-ext4-development&quot;&gt;Ongoing ext4 development&lt;/h1&gt;
&lt;p&gt;Ext4는 Monty Python 병 피해자가 말했던 것처럼 “ 아직 안죽었어요!” 비록 그것의 주요 개발자는 그것을 진정한 차세대 파일시스템으로 가는 임시방편에 불과하다고 생각하지만 어느 누구도 한동안 root 파일 시스템으로 배치될 준비가 되지 않을 것입니다(기술이나 라이센스 문제때문에).&lt;/p&gt;

&lt;p&gt;메타 데이터의 체크섬, 1등급 할당량 지원 및 대형 할당 블록을 포함해, 아직도 몇가지 핵심적인 기능이 향후 버전의 ext4로 개발되고 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;metadata-checksumming-메타-데이터-체크섬&quot;&gt;Metadata checksumming (메타 데이터 체크섬)&lt;/h2&gt;
&lt;p&gt;ext4는 여분의 수퍼블록을 가지고 있기 때문에  그 안의 메타 데이터를 체크섬 해서 주요 슈퍼블록이 손상되고 대체가 사용할 필요가 있는지 스스로 파악하는 방법을 제공합니다. 체크섬없이 손상된 수퍼 블록에서 복구 할 수는 있지만 사용자는 먼저 손상되었는지 확인한 다음 대체 시스템을 사용하여 파일 시스템을 수동으로 마운트해야합니다. 손상된 주요 수퍼 블록가진 파일시스템을  read-write로 마운트할 때 경우에 따라 더많은 손상이 발생할 수 있습니다. 파일 시스템을 마운트 할 때 손상된 기본 슈퍼 블록을 사용하여 읽기 - 쓰기가 가능하기 때문에 경우에 따라 더 많은 손상이 발생할 수 있습니다. 충분한 경험이있는 사용자라 할지라도 충분한 해결책은 아닙니다!&lt;/p&gt;

&lt;p&gt;btrfs 나 zfs같은 차세대 파일시스템이 제공하는 매우 강력한 블록단위 체크섬과 비교해서 ext4의 메타데이터 체크섬은 꽤 약한 기능입니다. 그러나 없는 것 보다는 훨씬 낫습니다.&lt;/p&gt;

&lt;p&gt;쉬운결정 처럼 들리지만 - 그래, 모든것을 체크섬해 ! - 파일시스템에 체크섬을 결합하는 것은 몇가지 중요한 도전입니다; 자세한 내용은 설계 문서를 참조하세요.&lt;/p&gt;

&lt;h2 id=&quot;first-class-quota-support&quot;&gt;First-class quota support&lt;/h2&gt;
&lt;p&gt;잠깐만, 할당량?! 우리는 ext2 시대이후로 그것들을 가지고 있습니다! 네, 하지만 그것들은 항상 뒤늦어져왔고 좀 별로였습니다. 아마도 여기서 어려운 세부사항으로 들어가는 것은 별로 좋지않지만 &lt;a href=&quot;https://ext4.wiki.kernel.org/index.php/Design_For_1st_Class_Quota_in_Ext4&quot;&gt;설계 문서&lt;/a&gt;는 할당량이 사용자 공간에서 커널로 이동하고 더 정학하고 효율적으로 시행되는 방식을 설명합니다.&lt;/p&gt;

&lt;h2 id=&quot;large-allocation-blocks-큰-할당-블록&quot;&gt;Large allocation blocks (큰 할당 블록)&lt;/h2&gt;
&lt;p&gt;시간이 지남에 따라 이런 성가신 저장 시스템은 점점 더 커지고 있습니다. 이미 8K 하드웨어 블록사이즈를 사용하는 solid-state drive의 경우 ext4의 4K 블록에 대한 현재의 제한이 점점 더 제한됩니다. 더 커진 스토리지 블록은 단편화를 줄이고 증가된 여유 공간을 희생해서 (파일 또는 파일의 마지막조각을 저장하기 위해 블록의 일부만 필요로할 때 남은 공간) 성능을 크게 향상시킬 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ext4.wiki.kernel.org/index.php/Design_for_Large_Allocation_Blocks&quot;&gt;설계 문서&lt;/a&gt;에서 어려운 세부사항을 볼 수 있습니다.&lt;/p&gt;

&lt;h1 id=&quot;practical-limitations-of-ext4&quot;&gt;Practical limitations of ext4&lt;/h1&gt;
&lt;p&gt;Ext4는 견고하고 안정적인 파일시스템이며 2018년에는 대부분의 사람들이 루트 파일 시스템으로 사용해야 할 것입니다. 그러나 모든것을 다룰 수는 없습니다. 지금부터 ext4에서 기대하지 말아야 하는 것들에 대해 간단하게 말씀드리겠습니다&lt;/p&gt;

&lt;p&gt;비록 ext4는 최대 1 EiB 의 데이터(1,000,000 TiB) 를 처리할 수 있지만 정말로 그렇게 시도하지는 말아야합니다. 단순히 더 많은 블록의 주소를 기억할 수 있는 것 이상의 규모 문제가 있으며 ext4는 현재 50-100 TiB 이상의 데이터를 처리할 수 없습니다. (아마 앞으로도 없을거같고)&lt;/p&gt;

&lt;p&gt;또한 Ext4는 데이터 무결성을 보장하기에 충분하지 않습니다. journaling 같은 큰 발전이 ext3 시대에 뒷받침하고있어 데이터손상의  일반적인 원인을 많이 다루지는 않습니다. 이미 디스크에 있는 동안 데이터가 손상되었다면 -결점이 있는 하드웨어, 우주광선의 영향(네, 진짜로), 또는 시간 경과에 따른 단순한 저하 - ext4는 그런 손상을 발견하거나 고칠 방법이없습니다.&lt;/p&gt;

&lt;p&gt;마지막 두개의 항목에 기초해서 ext4는 순수한 파일스템일 뿐이며 스토리지 볼륨 매니저가 아닙니다. 비록 다수의 디스크 -  그래서 이론적으로 손상된 데이터를 복구할 수 있는 패리티 또는 중복성-  가 있더라도 ext4는 그런 장점을 알거나 사용할 방법이 없다. 이론적으로 자동 손상 감지와 수리 기능을 잃지 않고 파일시스템과 스토리지 볼륨 관리시스템을 분리된 계층으로 나눌수  있지만 현재 스토리지 시스템은 그렇게 설계되어있지 않습니다. 그리고 새로운 디자인에 의미있는 도전이 될겁니다.&lt;/p&gt;

&lt;h1 id=&quot;alternate-filesystems&quot;&gt;Alternate filesystems&lt;/h1&gt;
&lt;p&gt;시작하기전에 주의사항: 배포판의 main 라인 커널의 일부로 내장되어 있지 않고 직접 지원하는 대체의 파일시스템을 매우 조심하세요!&lt;/p&gt;

&lt;p&gt;비록 파일시스템이 안정하더라도 루트파일시스템으로 사용하는 것은 커널 업그레이드 중에 간단한 문제가 발생한다면 매우 무서울 수 있습니다. 대체 미디어로 부팅하고 수동으로 꾸준히 커널모듈, grub 설정, chroot로 부터 DKMS를  찔러보는 생각에 편안하지않다면 중요한 시스템의 루트파일시스템은 마음편히 하지마세요.&lt;/p&gt;

&lt;p&gt;배포판에서 직접 지원하지 않는 파일시스템을 사용하는 것이 좋은 이유가 있을 수 있습니다 - 하지만 그렇게 한다면 시스템이 올라오고 사용할 수 있게 된후 마운트하길 강하게 추천드립니다. (예를 들어, ext4 루트 파일시스템을 가지고 있지만 데이터의 대부분은 zfs나 btrfs pool에 저장할 수 있습니다.&lt;/p&gt;

&lt;p&gt;배포판에서 직접 지원하지 않는 파일 시스템을 사용하는 것이 좋은 이유가있을 수 있습니다. 그렇다면 시스템을 사용하고 사용할 수있게 된 후에 마운트하는 것이 좋습니다. (예를 들어, ext4 루트 파일 시스템을 가지고 있지만 대부분의 데이터를 zfs 또는 btrfs 풀에 저장할 수 있습니다.)&lt;/p&gt;

&lt;h2 id=&quot;xfs&quot;&gt;XFS&lt;/h2&gt;
&lt;p&gt;XFS는 Linux 에서 사용되는 non-ext 파일시스템의 거의 main 라인급입니다. 2001 년부터 리눅스 커널에 내장 된 64 비트 저널링 파일 시스템이며 대용량 파일시스템에 높은 성능과 높은 동시성을 제공합니다(즉, 정말 많은 수의 프로세스가 한번에 파일 시스템에 기록합니다.)&lt;/p&gt;

&lt;p&gt;XFS는 RHEL7 부터 Red Hat Enterprise linux 의 기본 파일 시스템이 되었습니다. 가정이나 중소기업 사용자에게는 여전히 몇가지 단점이 있습니다.  - 특히 기존 XFS파일시스템 크기를 조정하는게 매우 어려우며, 일반적으로 또다른 곳을 만들고 데이터를 복사하는 것이 더 합리적입니다.&lt;/p&gt;

&lt;p&gt;XFS가 안정적이고 성능이 우수하지만 &amp;gt; 50TiB 용량 파일시스템같은 ext4가 가진 특정한 문제를 해결하지 않는 한, 기본 값(예:RHEL7)이 아닌 곳에서 사용을 권장하기에 ext4와의 구체적인 최종 사용 차이점이 없습니다.&lt;/p&gt;

&lt;p&gt;XFS는 ZFS, btrfs 또는 WAFL(독점 SAN 파일시스템) 같은 방법으로 “차세대” 파일시스템은 아닙니다. ext4처럼 더 나은 것을 향한 길을 따라 임시 방편으로 간주될 가능성이 가장 높습니다.&lt;/p&gt;

&lt;h2 id=&quot;zfs&quot;&gt;ZFS&lt;/h2&gt;
&lt;p&gt;ZFS는 Sun Microsystems에서 개발했으며 zettabyte -1조 기가와 동일 - 의 이름을 따서 명명되었으므로 이론적으로 큰 스토리지 시스템을 처리할 수 있습니다.&lt;/p&gt;

&lt;p&gt;진정한 차세대 파일 시스템인 ZFS는 볼륨관리(단일 파일시스템에 여러개의 개별 저장 장치를 처리하는 기능), 블록 수준의 암호화 checksumming(매우 높은 정확도의 데이터 손상 탐지 가능), 자동 손상 복구(여분이나 패리티 스토리지가 사용가능한 곳), 신속한 비동기 증분 복제, 인라인 압축 등 훨씬 더 많이 제공합니다.&lt;/p&gt;

&lt;p&gt;Linux 사용자의 관점에서 ZFS의 가장 큰 문제는 라이센스입니다. ZFS는 GPL과 충돌하는 반영구 라이센스인 CDDL을 허용합니다. 리눅스 커널에서 ZFS를 사용하는 것의 의미에 대해서는 “GPL위반이다”, “CDDL 위반이다”부터 “완벽히 괜찮다 단지 법정에서 판단되지 않았을뿐이다” 까지 다양한 의견으로 많은 논쟁이 있습니다. 특히 Canonical 은 지금까지 합법적 신청없이 2016년 이후로 커널에 ZFS code 라인을 포함시켰습니다.&lt;/p&gt;

&lt;p&gt;현재로서는 열렬한 ZFS 사용자인데도 루트 파일시스템으로 ZFS를 추천하지 않습니다. 리눅스에 ZFS의 장점을 활용하려면 ext4에 소형 root 파일시스템을 설치한 후 나머지 저장공간에 ZFS를 설치하고 원하는 데이터, 애플리케이션을 배치합니다. - 다만, 배포판이 명시적으로 zfs를 root로 지원할때까지는 ext4를 root로 유지합니다.&lt;/p&gt;

&lt;h2 id=&quot;btrfs&quot;&gt;btrfs&lt;/h2&gt;
&lt;p&gt;B-Tree 파일시스템의 약자로 일반적으로 “butter”라고 발음하는 Btrfs 는 2007년에 Oracle 에서 재직중이던 Chris Mason 에 의해 발표되었습니다. Btrfs는 여러개의 장치 관리, 블록단위 checksumming, 비동기 복제, 인라인 압축 등등을 제공하는 ZFS와 거의 동일한 목표를 삼고 있습니다.&lt;/p&gt;

&lt;p&gt;2018년부터 btrfs는 상당히 안정적이고 표준 단일 시스템으로 사용할 수 있지만 볼륨 관리자로 의존하지는 않아야 합니다. 많은 일반적인 사용 사례에서 ext4, XFS 또는 ZFS에 비해 상당한 성능 문제가 발생하며,  차세대 기능(복제, 다중 디스크 토폴로지와 스냅샷 관리)은 비극적으로 감소된 성능부터 실제 데이터 손실에 이르기까지의 크게 결함이 있을 수 있습니다.&lt;/p&gt;

&lt;p&gt;진행중인 btrfs의 상태는 논란이 되고 있습니다. SUSE Enterprise Linux는 2015년에 기본 파일시스템으로 인정한 반면 Red Hat은 2017년 RHEL 7.4의 시작으로 btrfs를 지원하지 않는다고 발표했습니다. ZFS 같이 다중 디스크 볼륨 관리가 아닌 단일 디스크 파일시스템으로 btrfs의 운영과 지원되는 운영 환경 구축으로 사용하는 것에 주목할 가치가 있습니다. -  스토리지 어플라이언스에 btrfs를 사용하는 Synology도 기존의 Linux 커널 RAID (mdraid) 위에 계층화하여 디스크를 관리합니다.&lt;/p&gt;
</description>
        <pubDate>Tue, 31 Jul 2018 00:00:00 +0900</pubDate>
        <link>http://192.168.0.62:4000/linux/2018/07/31/linux-filesystem/</link>
        <guid isPermaLink="true">http://192.168.0.62:4000/linux/2018/07/31/linux-filesystem/</guid>
        
        <category>Linux</category>
        
        <category>File System</category>
        
        <category>Kernel</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>ConfluencePage CSS꾸미기</title>
        <description>&lt;h1 id=&quot;오픈소스컨설팅-기술-블로그&quot;&gt;오픈소스컨설팅 기술 블로그&lt;/h1&gt;
&lt;h2 id=&quot;기술을-나눕니다-함께-성장합니다&quot;&gt;기술을 나눕니다. 함께 성장합니다.&lt;/h2&gt;

&lt;p&gt;Confluence(이하 컨플루언스)는 간단한 방법으로 문서를 작성, 공유하는 도구입니다. 문서를 꾸미는데&lt;br /&gt;
시간을 낭비하지 않고 고객이 원하는 서비스를 구현, 지원하는데 모든 걸 쏟아붓습니다.&lt;/p&gt;

&lt;p&gt;하지만, 우리가 어떤 민족입니까. &lt;code class=&quot;highlighter-rouge&quot;&gt;멋&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;간지&lt;/code&gt;가 있어줘야 하지 않겠습니까. IT에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;멋&lt;/code&gt;을 CSS라고 부르더군요. w3schools.com의 CSS는 소개는 이렇습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;CSS stands for Cascading Style Sheets&lt;br /&gt;
CSS describes how HTML elements are to be displayed on screen, paper, or in other media&lt;br /&gt;
CSS saves a lot of work. It can control the layout of multiple web pages all at once&lt;br /&gt;
External stylesheets are stored in CSS files&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;멋&lt;/code&gt;을 입힐 수 있다고합니다. 우리도 컨플루언스에 &lt;code class=&quot;highlighter-rouge&quot;&gt;멋&lt;/code&gt;을 좀 내볼까요?&lt;/p&gt;

&lt;h2 id=&quot;사전조건&quot;&gt;사전조건&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;컨플루언스 관리자 (confluence-administrators)&lt;br /&gt;
CSS로 &lt;code class=&quot;highlighter-rouge&quot;&gt;멋&lt;/code&gt;을 내다보면 실수할 수도 있으니 운영시간 이외에 또는 테스트 환경에 우선 적용을 해보시기 바랍니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;h1-제목에-스타일-입히고-전체-폰트-키우기&quot;&gt;h1 제목에 스타일 입히고 전체 폰트 키우기&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/h1_css.png&quot; alt=&quot;Confluence CSS&quot; /&gt;&lt;br /&gt;
위 사진처럼 H1 제목에 강조하는 스타일을 적용하고 일반 텍스트 폰트 사이즈를 키워보겠습니다. 폰트가 작아서 좀 답답했거든요..&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Admin menu&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Look and feel&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Stylesheet&lt;/code&gt; 메뉴를 보시면&lt;br /&gt;
 &lt;img src=&quot;/assets/images/wiki_css_menu.png&quot; alt=&quot;Confluence Menu 위치&quot; /&gt;[width=200]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Global CSS를 입력할 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;EDIT&lt;/code&gt; 버튼으로 CSS를 입력합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wiki_css.png&quot; alt=&quot;Confluence Global Stylesheet&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; /* main content는 page 글 부분입니다. */
#main-content h1{
  border-left: 5px solid black;
  padding-left: 5px;
}

/* 글씨 크기 키우기 */
#main-content p{
    font-size: 15px;
    padding-bottom: 5px; /* 글 간격 조정 */
}

/* 구두점 목록 글씨 크기 키우기 */
#main-content li {
  font-size: 15px;
  padding-bottom: 5px;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;코드를 복사&amp;amp;붙여 넣기 후 바뀐 페이지를 확인할 수 있습니다.&lt;br /&gt;
Edit할 때는 보이지 않지만 저장 후 보여요 :)&lt;br /&gt;
간단한 방법으로 각자의 &lt;code class=&quot;highlighter-rouge&quot;&gt;멋&lt;/code&gt;을 추가해보시는건 어떨까요?&lt;/p&gt;

&lt;p&gt;오픈소스컨설팅&lt;br /&gt;
김세연&lt;br /&gt;
atlassian@osci.kr&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Jul 2018 00:00:00 +0900</pubDate>
        <link>http://192.168.0.62:4000/confluence,%20atlassian/2018/07/23/confluence-style/</link>
        <guid isPermaLink="true">http://192.168.0.62:4000/confluence,%20atlassian/2018/07/23/confluence-style/</guid>
        
        <category>Confluence</category>
        
        <category>Atlassian</category>
        
        <category>CSS</category>
        
        
        <category>Confluence, Atlassian</category>
        
      </item>
    
      <item>
        <title>GitHub Page 블로그 이전</title>
        <description>&lt;h1 id=&quot;오픈소스컨설팅-기술-블로그&quot;&gt;오픈소스컨설팅 기술 블로그&lt;/h1&gt;
&lt;h2 id=&quot;기술을-나눕니다-함께-성장합니다&quot;&gt;기술을 나눕니다. 함께 성장합니다.&lt;/h2&gt;

&lt;h2 id=&quot;설명&quot;&gt;설명&lt;/h2&gt;
&lt;p&gt;기술 블로그를 GitHub Page로 이전 했습니다.&lt;br /&gt;
GitHub Page를 선택한 이유는 HTML, CSS, Javascript를 자유롭게 수정하고 싶었습니다.
하지만 Infra, Middleware를 구성은 만드는데 시간도 필요하고 유지보수 하기도 힘들고.. 그래서
GitHub Page를 선택했습니다. 우리는 &lt;code class=&quot;highlighter-rouge&quot;&gt;글 쓰기에&lt;/code&gt; 집중하면서 무료 테마나 오픈소스로 Github에서 서비스 하면 됩니다.&lt;br /&gt;
우선 다른 블로그와 달리 &lt;code class=&quot;highlighter-rouge&quot;&gt;Git&lt;/code&gt;을 조금 알아야 하구요.
&lt;code class=&quot;highlighter-rouge&quot;&gt;MarkDown&lt;/code&gt;도 알아야 합니다. 어렵지 않습니다.&lt;br /&gt;
이 글이 도움이 되길 바랍니다.&lt;/p&gt;

&lt;h2 id=&quot;github-회원가입&quot;&gt;GitHub 회원가입&lt;/h2&gt;
&lt;p&gt;아직 가입 안하셨다면, 이번 기회에 가입해 보세요&lt;br /&gt;
오픈소스컨설팅 기술 블로그로 감을 익히시고 &lt;code class=&quot;highlighter-rouge&quot;&gt;개인 GitHub 블로그&lt;/code&gt; 운영도 해보세요 :)&lt;/p&gt;

&lt;h2 id=&quot;환경-구성&quot;&gt;환경 구성&lt;/h2&gt;
&lt;p&gt;Windows, Mac(Linux) 환경 구성 방법을 안내해 드리겠습니다.&lt;br /&gt;
환경 구성 후 GitHub에서 블로그 소스코드를 내려 받고,&lt;br /&gt;
글을 편집하고 GitHub에 올려 보겠습니다.
글 편집에는 Atom이라는 도구를 이용했지만 자유롭게 어떤 편집기든 가능합니다.(심지어 메모장 가능!)&lt;br /&gt;
이 과정이 어려우시면 오픈소스컨설팅 직원은 &lt;code class=&quot;highlighter-rouge&quot;&gt;https://wiki.osci.kr/pages/viewpage.action?pageId=41553358&lt;/code&gt;에 올려주세요.
  우리 엔지니어들이 도와 드릴겁니다. 글이 중요하지 뭐가 중요하겠어요.&lt;/p&gt;

&lt;h3 id=&quot;설치-프로그램&quot;&gt;설치 프로그램&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Git (소스코드 관리)&lt;/li&gt;
  &lt;li&gt;Ruby (아름다운 언어)&lt;/li&gt;
  &lt;li&gt;jekyll (소스코드 빌드/서비스)&lt;/li&gt;
  &lt;li&gt;Atom (편집도구)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;windows&quot;&gt;Windows&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Git 설치 https://git-scm.com/download/win&lt;/li&gt;
  &lt;li&gt;Ruby 설치  https://github.com/oneclick/rubyinstaller2/releases/download/rubyinstaller-2.5.1-2/rubyinstaller-devkit-2.5.1-2-x64.exe&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Start Command Prompt with Ruby&lt;/code&gt; 실행&lt;/li&gt;
  &lt;li&gt;utf8 설정
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\Users\sy\work&amp;gt;chcp 65001
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;GitHub 블로그 Clone (폴더가 생성됩니다. 작업 위치 선정 필요합니다.)
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\Users\sy\work&amp;gt;git clone git@github.com:OpenSourceConsulting/opensourceconsulting.github.io.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;jekyll 설치
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\Users\sy\work\opensourceconsulting.github.io&amp;gt;gem install bundler jekyll
Fetching: bundler-1.16.2.gem (100%)
Successfully installed bundler-1.16.2
Parsing documentation for bundler-1.16.2
Installing ri documentation for bundler-1.16.2
Done installing documentation for bundler after 11 seconds
Fetching: public_suffix-3.0.2.gem (100%)
Successfully installed public_suffix-3.0.2
Fetching: addressable-2.5.2.gem (100%)
Successfully installed addressable-2.5.2
Fetching: colorator-1.1.0.gem (100%)
Successfully installed colorator-1.1.0
Fetching: http_parser.rb-0.6.0.gem (100%)
MSYS2 could not be found. Please run 'ridk install'
or download and install MSYS2 manually from https://msys2.github.io/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;블로그 bundle install
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\Users\sy\work\opensourceconsulting.github.io&amp;gt;bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;내 컴퓨터(local)에 jekyll build 및 서버 실행
    &lt;blockquote&gt;
      &lt;p&gt;jekyll build는 웹 사이트에 보여지는 코드를 생성한다.&lt;br /&gt;
우리는 build된 코드를 배포해야 한다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  C:\Users\sy\work\opensourceconsulting.github.io&amp;gt;bundle exec jekyll serve

  Configuration file: C:/Users/sy/work/opensourceconsulting.github.io/_config.yml
     GitHub Metadata: No GitHub API authentication could be found. Some fields may be missing or have incorrect data.
              Source: C:/Users/sy/work/opensourceconsulting.github.io
         Destination: C:/Users/sy/work/opensourceconsulting.github.io/_site
   Incremental build: disabled. Enable with --incremental
        Generating...
                      done in 8.31 seconds.
   Auto-regeneration: enabled for 'C:/Users/sy/work/opensourceconsulting.github.io'
      Server address: http://127.0.0.1:4000/
    Server running... press ctrl-c to stop.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;macos&quot;&gt;macOS&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Git 설치 [https://git-scm.com/download/mac]&lt;/li&gt;
  &lt;li&gt;Ruby Version 확인
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; Ruby -v
ruby 2.3.3p222 (2016-11-21 revision 56859) [universal.x86_64-darwin17]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Jekyll 설치
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; gem install bundler jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;GitHub 저장소 복사
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;gt; git clone git@github.com:OpenSourceConsulting/opensourceconsulting.github.io.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;bundle install
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; opensourceconsulting.github.io&amp;gt;bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;내 컴퓨터(local)에 jekyll build 및 서버 실행
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; opensourceconsulting.github.io&amp;gt;bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;글-쓰기-windows--macos&quot;&gt;글 쓰기 (Windows &amp;amp; macOS)&lt;/h3&gt;
&lt;p&gt;에디터는 Atom으로 진행하지만 편하신걸로 아무거나 괜찮습니다!&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Jira Issue key&lt;/code&gt;로 &lt;code class=&quot;highlighter-rouge&quot;&gt;브랜치를 생성&lt;/code&gt;하여 글을 작성하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Pull Request&lt;/code&gt;로 작성한 글을 승인 받고 웹에 퍼블리싱하는 과정을 설명하겠습니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Jira Issue 생성&lt;br /&gt;
 https://jira.osci.kr/secure/RapidBoard.jspa?rapidView=98&amp;amp;projectKey=TB
  이슈를 생성해 주세요.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Git Branch 생성&lt;br /&gt;
 블로그 위치에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -b &amp;lt;issue key&amp;gt;&lt;/code&gt; 이슈키로 브랜치를 생성합니다.
 opensourceconsulting.github.io&amp;gt;git checkout TB-5&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Atom 설치 [ https://atom.io/ ]&lt;br /&gt;
 File &amp;gt; Open &amp;gt; opensourceconsulting.github.io &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;글 생성&lt;br /&gt;
 &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; 폴더에 yyyy-mm-dd-title.md 파일 생성&lt;br /&gt;
 다른 post의 header를 참고로 page 정보 기입&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;마크다운&lt;br /&gt;
 ```&lt;br /&gt;
 # This is a H1&lt;br /&gt;
 ## This is a H2&lt;br /&gt;
 ### This is a H3&lt;br /&gt;
 #### This is a H4&lt;br /&gt;
 ##### This is a H5&lt;br /&gt;
 ###### This is a H6&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enter는 스페이스 2개&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; code block  
4개의 스페이스 또는 tab이 시작되고 끝나는 부분까지 코드로 인식
       ``` This is a normal paragraph: This is a code block. end code block. ```

       마크다운 링크 참고 https://gist.github.com/ihoneymon/652be052a0727ad59601
 - 이미지 첨부  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;/assets/images/ 경로에 이미지 파일 삽입
 ![이미지 설명]({{ “/assets/images/fileName.png” | absolute_url }})
 ```&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;글 작성 후 jekyll로 로컬에서 확인&lt;br /&gt;
    opensourceconsulting.github.io&amp;gt;bundle exec jekyll serve
http://127.0.0.1:4000/ post 확인&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git status&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;opensourceconsulting.github.io&amp;gt;git status&lt;/code&gt; 수정한 파일을 확인합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git add&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;opensourceconsulting.github.io&amp;gt;git add .&lt;/code&gt;수정된 파일 모두 Staging에 추가합니다. add 띄고 점이 있어요.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git commit&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;opensourceconsulting.github.io&amp;gt;git commit -m &quot;Update readme&quot;&lt;/code&gt; 수정된 파일 저장소에 저장합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt;은 commit message입니다. 동사로 시작하며 첫 문자만 대문자로 해주면 좋아요.(나중에 보기에 이뻐요…)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git push&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;opensourceconsulting.github.io&amp;gt;git push&lt;/code&gt; 원격 저장소에 생성한 브랜치를 업로드 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create Pull Request&lt;br /&gt;
GitHub에서 생성한 브랜치를 Master에 Merge를 요청합니다.&lt;br /&gt;
GitHub URL [https://github.com/OpenSourceConsulting/opensourceconsulting.github.io]&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/branch_1.png&quot; alt=&quot;Branch 메뉴&quot; /&gt;&lt;br /&gt;
branches 메뉴 선택&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/branch_2.png&quot; alt=&quot;New Pull Request&quot; /&gt;&lt;br /&gt;
Your branches에서 New pull request 버튼 클릭&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/branch_3.png&quot; alt=&quot;Open Pull Request&quot; /&gt;&lt;br /&gt;
Title에는 Jira 이슈키와 간단한 제목을 적어줍니다.&lt;br /&gt;
Description은 선택사항 입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Create Pull Request&lt;/code&gt; 버튼으로 Pull Request를 생성합니다.&lt;/p&gt;

&lt;h2 id=&quot;마무리&quot;&gt;마무리&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; 가입을 시작으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Git&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Ruby&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Atom&lt;/code&gt;을 설치했습니다.&lt;br /&gt;
글을 작성하기 위해서 내 컴퓨터에 GitHub 원격 저장소를 &lt;code class=&quot;highlighter-rouge&quot;&gt;git clone&lt;/code&gt; 명령어로 저장 했습니다.
Atom 에디터로 Post를 작성하기 위해서 Markdown을 습득했습니다.&lt;br /&gt;
글 작성이 완료되고 &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt;로 Staging 환경에 저장했습니다. Staging 환경에는 자주 저장해도 좋습니다.&lt;br /&gt;
모두 마무리가 됐다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;으로 저장소에 저장하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;git push&lt;/code&gt;로 원격 저장소에 업로드까지 했습니다.
마지막으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Create Pull Request&lt;/code&gt;로 Master 브랜치에 Merge까지 했습니다.
기술 블로그 글 작성을 통해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Git&lt;/code&gt;의 기본 기능과 &lt;code class=&quot;highlighter-rouge&quot;&gt;Markdown&lt;/code&gt;을 익혀보시면 좋을 것 같습니다.&lt;br /&gt;
글은 작성하고 싶은데 과정이 어려우시다면  회사 Wiki에 작성 부탁드립니다.
글이 많이 작성 된다면 스크립트 만들어서 자동으로 넘기겠습니다.  &lt;code class=&quot;highlighter-rouge&quot;&gt;https://wiki.osci.kr/pages/viewpage.action?pageId=41553358&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Jul 2018 00:00:00 +0900</pubDate>
        <link>http://192.168.0.62:4000/opensource,%20github,%20jekyll/2018/07/03/migration-github-blog/</link>
        <guid isPermaLink="true">http://192.168.0.62:4000/opensource,%20github,%20jekyll/2018/07/03/migration-github-blog/</guid>
        
        <category>GitHub</category>
        
        <category>Blog</category>
        
        <category>T-Story</category>
        
        <category>Jekyll</category>
        
        
        <category>OpenSource, GitHub, Jekyll</category>
        
      </item>
    
      <item>
        <title>팀에게 애자일 조금씩 주입하기.</title>
        <description>&lt;div class=&quot;area_view&quot;&gt;
 &lt;div class=&quot;tt_article_useless_p_margin&quot;&gt;
  &lt;h2 class=&quot;graf graf--p graf-after--h3&quot; id=&quot;id-팀에게애자일조금씩주입하기.-Introduction&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-size: 20px; font-weight: normal; line-height: 1.5; border-bottom-color: rgb(204, 204, 204); font-family: Arial, sans-serif;&quot;&gt;
   Introduction
  &lt;/h2&gt;
  &lt;h3 class=&quot;graf graf--h3&quot; name=&quot;4840&quot;&gt;
   &lt;p class=&quot;graf graf--p graf-after--h3&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; font-weight: normal;&quot;&gt;
    안녕하세요.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; font-weight: normal;&quot;&gt;
    오픈소스컨설팅 솔루션 설계팀 김세연입니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; font-weight: normal;&quot;&gt;
    저희는 기존 시스템을 오픈소스로 전환, 사용 지원하고 있습니다. 더 많은 내용은
    &lt;a class=&quot;external-link&quot; href=&quot;http://www.osci.kr/&quot; rel=&quot;nofollow&quot; style=&quot;color: rgb(53, 114, 176);&quot;&gt;
     www.osci.kr
    &lt;/a&gt;
    에서 확인해 주세요.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; font-weight: normal;&quot;&gt;
    고객에게 가치를 전달하는 IT 프로젝트는 무엇일까요? 고객의 요구사항을 기간 안에 구현하는 것일까요?
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; font-weight: normal; text-align: center; clear: none; float: none;&quot;&gt;
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/71/1_DYLGTNodpq9Fal-prB2rHg.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; font-weight: normal;&quot;&gt;
    &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot; resolved=&quot;&quot; style=&quot;position: relative; display: inline-block; max-width: 100%;&quot;&gt;
     &lt;br /&gt;
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--figure&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; font-weight: normal;&quot;&gt;
    위 그림은 IT 프로젝트의 초기 요구사항의 불확실성, 복잡성에 대해서 각 담당자가 이해한 결과물을 보여줍니다. 사실 고객은 나무에서 타이어 그네를 타고 싶었습니다. 프로젝트가 끝날 때쯤에 알았다면 이미 늦었습니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; font-weight: normal;&quot;&gt;
    프로젝트 기간, 비용, 품질 3박자를 충족시키고 시장(고객)의 반응이 좋을 때 성공했다고 생각이 듭니다. 여기서 한 가지 더 개발사도 만족할 때 최고의 성공이라고 생각합니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; font-weight: normal;&quot;&gt;
    저는 프로젝트 성공에 대한 관점을 3가지로 봅니다.
   &lt;/p&gt;
   &lt;ul style=&quot;margin: 10px 0px 0px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; font-weight: normal;&quot;&gt;
    &lt;li class=&quot;graf graf--p graf-after--p&quot;&gt;
     납기일에 가치있는 제품을 고객에게 전달
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--p&quot;&gt;
     시장또는 고객의 좋은 반응
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--p&quot;&gt;
     고객/수행사의 만족
    &lt;/li&gt;
   &lt;/ul&gt;
  &lt;/h3&gt;
  &lt;h2 class=&quot;graf graf--h4 graf-after--p&quot; id=&quot;id-팀에게애자일조금씩주입하기.-폭포수모델(Waterfallmodel)의문제점&quot; style=&quot;margin: 30px 0px 0px; padding: 0px; color: rgb(51, 51, 51); font-size: 20px; font-weight: normal; line-height: 1.5; border-bottom-color: rgb(204, 204, 204); font-family: Arial, sans-serif;&quot;&gt;
   폭포수 모델(Waterfall model)의 문제점
  &lt;/h2&gt;
  &lt;figure class=&quot;graf graf--figure&quot; name=&quot;8538&quot;&gt;
  &lt;/figure&gt;
  &lt;figure class=&quot;graf graf--figure&quot; name=&quot;8538&quot;&gt;
   &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:350px;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/71/1-65tz1CLQni4BUs5UEHv9uA.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
    &lt;span style=&quot;text-align: start;&quot;&gt;
     참조 1.
    &lt;/span&gt;
    &lt;a class=&quot;markup--anchor markup--figure-anchor&quot; data-href=&quot;https://ko.wikipedia.org/wiki/%ED%8F%AD%ED%8F%AC%EC%88%98_%EB%AA%A8%EB%8D%B8&quot; href=&quot;https://ko.wikipedia.org/wiki/%ED%8F%AD%ED%8F%AC%EC%88%98_%EB%AA%A8%EB%8D%B8&quot; rel=&quot;nofollow noopener noopener noopener&quot; style=&quot;text-align: start;&quot; target=&quot;_blank&quot;&gt;
     https://ko.wikipedia.org/wiki
    &lt;/a&gt;
    &lt;span style=&quot;text-align: start;&quot;&gt;
     /폭포수
    &lt;/span&gt;
    &lt;span style=&quot;text-align: start;&quot;&gt;
     _모델
    &lt;/span&gt;
   &lt;/p&gt;
  &lt;/figure&gt;
  &lt;div class=&quot;wiki-content&quot; id=&quot;main-content&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px;&quot;&gt;
   &lt;p class=&quot;graf graf--p graf-after--figure&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    폭포수 모델은 분석, 설계, 구현, 테스트를 순차적으로 진행 됩니다. 이 형태는 중간에 요구사항만 변경하지 않는다면 단계가 명확해서 관리가 쉽습니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--figure&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    하지만 초반에 요구사항을 모두 분석하기 어렵고, 고객은 실제 제품을 프로젝트 후반부에 가서야 확인할 수 있기 때문에 나중에 요구사항이 많이 변경되는 단점이 있습니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--figure&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    후반부에 납기 일정을 맞추기 위해 무리한 야근과 일정으로 품질은 낮아지고 결과가 안 좋아 지는 경우가 많습니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--figure&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    문제점을 정리하면 아래와 같습니다.
   &lt;/p&gt;
   &lt;ul style=&quot;margin: 10px 0px 0px;&quot;&gt;
    &lt;li class=&quot;graf graf--p graf-after--figure&quot;&gt;
     프로젝트 초기 요구사항은 불확실하다.
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--figure&quot;&gt;
     요구사항의 변경이 빈번하게 일어난다.
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--figure&quot;&gt;
     QA단계에서 많은 수정사항이 일어난다.
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--figure&quot;&gt;
     잦은 초과근무가 발생한다.
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--figure&quot;&gt;
     품질은 낮아지고 유지보수 비용이 늘어난다.
    &lt;/li&gt;
   &lt;/ul&gt;
   &lt;p class=&quot;graf graf--p graf-after--figure&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    그러면 어떻게 해야 할까요? 조금씩 개발해서 자주 고객에게 보여주면됩니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--figure&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    개발 대상, 범위, 시간은 팀, 고객 모두와 조율 되야합니다. PM 또는 스크럼 마스터의 할 일이 여기있습니다.
   &lt;/p&gt;
   &lt;h2 class=&quot;graf graf--p graf-after--figure&quot; id=&quot;id-팀에게애자일조금씩주입하기.-애자일(Agile)무엇인가?&quot; style=&quot;margin: 30px 0px 0px; padding: 0px; font-size: 20px; font-weight: normal; line-height: 1.5; border-bottom-color: rgb(204, 204, 204);&quot;&gt;
    애자일(Agile) 무엇인가?
   &lt;/h2&gt;
   &lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    소프트웨어 역사는 100년도 안됩니다. 다른 학문에 비해 역사가 짧고 급변하고 있습니다.
   &lt;/p&gt;
   &lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    &lt;span style=&quot;color: rgb(34, 34, 34);&quot;&gt;
     90년대 후반까지의 소프트웨어 공학과 개발방법론은 장기간에 걸쳐 많은 사람들을 투입하고 충분한 비용을 투입하여 진행하는 다른 공학의 프로세스와 비슷한 맥락에서 진행되었습니다.
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    하지만
    &lt;span style=&quot;color: rgb(34, 34, 34);&quot;&gt;
     소프트웨어는 유동적이고 개방적고, 요구사항의 변경에 따른 작업량을 예측하기 힘들었습니다.
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    &lt;span style=&quot;color: rgb(34, 34, 34);&quot;&gt;
     애자일은 예측하며 개발을 하지 않고, 일정한 주기를 가지고 끊임없이 프로토 타입을 만들어내며
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    &lt;span style=&quot;color: rgb(34, 34, 34);&quot;&gt;
     그때 그때 필요한 요구를 더하고 수정하여 하나의 커다란 소프트웨어를 개발해 나가는 adaptive style 이라고 할 수 있습니다.
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    &lt;span style=&quot;color: rgb(34, 34, 34);&quot;&gt;
     애자일 선언을 살펴보겠습니다.
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   &lt;div class=&quot;table-wrap&quot; style=&quot;margin: 10px 0px 0px; padding: 0px; overflow-x: auto;&quot;&gt;
    &lt;table class=&quot;wrapped confluenceTable&quot; resolved=&quot;&quot; style=&quot;border-collapse: collapse; margin: 0px; overflow-x: auto;&quot;&gt;
     &lt;colgroup&gt;
      &lt;col /&gt;
     &lt;/colgroup&gt;
     &lt;tbody&gt;
      &lt;tr&gt;
       &lt;td class=&quot;confluenceTd&quot; style=&quot;border: 1px solid rgb(221, 221, 221); padding: 7px 10px; vertical-align: top; min-width: 8px;&quot;&gt;
        &lt;h2 id=&quot;id-팀에게애자일조금씩주입하기.-우리는소프트웨어를개발하고,또다른사람의개발을도와주면서소프트웨어개발의더나은방법들을찾아가고있다.이작업을통해우리는다음을가치있게여기게되었다:&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-size: 20px; font-weight: normal; line-height: 1.5; border-bottom-color: rgb(204, 204, 204);&quot;&gt;
         우리는 소프트웨어를 개발하고, 또 다른 사람의 개발을
         &lt;br /&gt;
         도와주면서 소프트웨어 개발의 더 나은 방법들을 찾아가고
         &lt;br /&gt;
         있다. 이 작업을 통해 우리는 다음을 가치 있게 여기게 되었다:
        &lt;/h2&gt;
        &lt;h2 id=&quot;id-팀에게애자일조금씩주입하기.-공정과도구보다개인과상호작용을포괄적인문서보다작동하는소프트웨어를계약협상보다고객과의협력을계획을따르기보다변화에대응하기를&quot; style=&quot;margin: 10px 0px 0px; padding: 0px; color: rgb(51, 51, 51); font-size: 20px; font-weight: normal; line-height: 1.5; border-bottom-color: rgb(204, 204, 204);&quot;&gt;
         공정과 도구보다
         &lt;strong&gt;
          개인과 상호작용을
         &lt;/strong&gt;
         &lt;br /&gt;
         포괄적인 문서보다
         &lt;strong&gt;
          작동하는 소프트웨어를
         &lt;/strong&gt;
         &lt;br /&gt;
         계약 협상보다
         &lt;strong&gt;
          고객과의 협력을
         &lt;/strong&gt;
         &lt;br /&gt;
         계획을 따르기보다
         &lt;strong&gt;
          변화에 대응하기를
         &lt;/strong&gt;
        &lt;/h2&gt;
        &lt;h2 id=&quot;id-팀에게애자일조금씩주입하기.-가치있게여긴다.이말은,왼쪽에있는것들도가치가있지만,우리는오른쪽에있는것들에더높은가치를둔다는것이다.&quot; style=&quot;margin: 10px 0px 0px; padding: 0px; color: rgb(51, 51, 51); font-size: 20px; font-weight: normal; line-height: 1.5; border-bottom-color: rgb(204, 204, 204);&quot;&gt;
         &lt;strong&gt;
          가치 있게 여긴다.
         &lt;/strong&gt;
         이 말은, 왼쪽에 있는 것들도 가치가 있지만,
         &lt;br /&gt;
         우리는 오른쪽에 있는 것들에 더 높은 가치를 둔다는 것이다.
        &lt;/h2&gt;
       &lt;/td&gt;
      &lt;/tr&gt;
     &lt;/tbody&gt;
    &lt;/table&gt;
   &lt;/div&gt;
   &lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    &lt;br /&gt;
    고객과 수행사 모두 애자일 선언에 대한 이해가 없으면 애자일 방법론을 적용하기가 어렵습니다.
   &lt;/p&gt;
   &lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    처음에는 위 선언문이 어색할지 몰라도 시간이 흐르고 애자일 프로젝트를 수행하다보면
   &lt;/p&gt;
   &lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    다른 시각으로 보이고 이해가 될 때가 있습니다. 저도 천천히 이해하고 있습니다
   &lt;/p&gt;
   &lt;h3 id=&quot;id-팀에게애자일조금씩주입하기.-애자일적용대상&quot; style=&quot;margin: 30px 0px 0px; padding: 0px; font-size: 16px; line-height: 1.5;&quot;&gt;
    애자일 적용 대상
   &lt;/h3&gt;
   &lt;div class=&quot;table-wrap&quot; style=&quot;margin: 10px 0px 0px; padding: 0px; overflow-x: auto;&quot;&gt;
    &lt;table class=&quot;wrapped confluenceTable&quot; resolved=&quot;&quot; style=&quot;border-collapse: collapse; margin: 0px; overflow-x: auto;&quot;&gt;
     &lt;colgroup&gt;
      &lt;col /&gt;
     &lt;/colgroup&gt;
     &lt;tbody&gt;
      &lt;tr&gt;
       &lt;td class=&quot;confluenceTd&quot; style=&quot;border: 1px solid rgb(221, 221, 221); padding: 7px 10px; vertical-align: top; min-width: 8px;&quot;&gt;
        &lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
         1. 목표 달성을 위한 프로세스를 가지지 않고, 임기응변적인 소프트웨어 개발로 인해 혼란에 빠져있는 조직이다. 이러한 프로젝트 팀에게 있어 애자일 개발 프로세스는, 개선을 위한 좋은 힌트가 될 것이다. 애자일 개발 프로세스는 작고 쉽게 도입할 수 있으며, 그것에 들어가는 비용과 위험도 낮다.
        &lt;/p&gt;
        &lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
         2. 이미 전통적인 소프트웨어 프로세스를 도입하고 있지만, 제대로 동작하지 않는(또는 프로세스 실시를 위한 오버헤드가 너무 커서 오히려 업무에 부담을 주고 있는) 조직이다. 프로세스의 도입은 조직의 문화를 바꾼다. 효과가 크면 클수록 조직문화에 대한 영향은 커지고, 도가 지나치게 되면 고유의 문화를 파괴해 버리기도 한다. 그러나 조직에 있어서 애자일 개발 프로세스는 좋은 결과를 가져다 줄 것이다. 또한
         &lt;a class=&quot;external-link&quot; href=&quot;https://ko.wikipedia.org/wiki/CMMI&quot; rel=&quot;nofollow&quot; style=&quot;color: rgb(53, 114, 176);&quot; title=&quot;CMMI&quot;&gt;
          CMMI
         &lt;/a&gt;
         나
         &lt;a class=&quot;external-link&quot; href=&quot;https://ko.wikipedia.org/wiki/ISO/IEC15504&quot; rel=&quot;nofollow&quot; style=&quot;color: rgb(53, 114, 176);&quot; title=&quot;ISO/IEC15504&quot;&gt;
          SPICE
         &lt;/a&gt;
         등의 인증을 얻으려고 하는 조직에서는 그들의 요구를 충족시킬 아이디어를 제공해 줄 수 있을 것이다.
        &lt;/p&gt;
        &lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
         참고.
         &lt;a class=&quot;external-link&quot; href=&quot;https://ko.wikipedia.org/wiki/%EC%95%A0%EC%9E%90%EC%9D%BC_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4_%EA%B0%9C%EB%B0%9C#.EC.95.A0.EC.9E.90.EC.9D.BC_.EC.84.A0.EC.96.B8.EB.AC.B8&quot; rel=&quot;nofollow&quot; style=&quot;color: rgb(53, 114, 176);&quot;&gt;
          위키
         &lt;/a&gt;
        &lt;/p&gt;
       &lt;/td&gt;
      &lt;/tr&gt;
     &lt;/tbody&gt;
    &lt;/table&gt;
   &lt;/div&gt;
   &lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    1번은 프로세스가 없고 2번은 전통적인 프로세스를 도입하고 있지만 제대로 동작하지 않는 조직입니다. 저는 1번, 2번 조직에서 작게 시작하는 방법을 제안 하겠습니다.
   &lt;/p&gt;
   &lt;h2 class=&quot;graf graf--h3 graf-after--p&quot; id=&quot;id-팀에게애자일조금씩주입하기.-팀원에게애자일조금씩주입하기&quot; style=&quot;margin: 30px 0px 0px; padding: 0px; font-size: 20px; font-weight: normal; line-height: 1.5; border-bottom-color: rgb(204, 204, 204);&quot;&gt;
    팀원에게 애자일 조금씩 주입하기
   &lt;/h2&gt;
   &lt;p class=&quot;graf graf--p graf-after--h3&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    조직 문화, Micro Service Architecture(MSA), 애자일, Devops 많은 방법이 있습니다. 이 세트가 다 같이 가면 좋겠지만. 나비의 작은 날갯짓처럼
    &lt;span class=&quot;markup--strong markup--p-strong&quot;&gt;
     작은 변화
    &lt;/span&gt;
    를
    &lt;span class=&quot;markup--strong markup--p-strong&quot;&gt;
     작은 팀부터
    &lt;/span&gt;
    적응하시기를 제안합니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    애자일 거부감이 있는 팀원이 있을 수 있습니다.
   &lt;/p&gt;
   &lt;ul style=&quot;margin: 10px 0px 0px;&quot;&gt;
    &lt;li class=&quot;graf graf--p graf-after--p&quot;&gt;
     내 일을 남에게 공유하기를 싫어함.
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--p&quot;&gt;
     지금 하고있는 일에 일이 더해진다고 느낌.
    &lt;/li&gt;
   &lt;/ul&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    하지만 애자일 방법론을 잘 적용/적응하면 개발자들은 정시퇴근과 업무의 높은 만족도를 얻으면서 가치있는 소프트웨어를 얻을 수 있습니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    애자일 선언 첫번째가 '개인과 상호작용에 가치 있게 여긴다'입니다. 그러기 위해서는 팀 커뮤니 케이션부터 개선하는 방법을 제안합니다.
   &lt;/p&gt;
   &lt;h2 class=&quot;graf graf--h4 graf-after--p&quot; id=&quot;id-팀에게애자일조금씩주입하기.-팀커뮤니케이션개선하기&quot; style=&quot;margin: 30px 0px 0px; padding: 0px; font-size: 20px; font-weight: normal; line-height: 1.5; border-bottom-color: rgb(204, 204, 204);&quot;&gt;
    팀 커뮤니케이션 개선하기
   &lt;/h2&gt;
   &lt;p class=&quot;graf graf--p graf-after--h4&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    전통적인 커뮤니케이션 채널은 리더 중심의 의사소통이 이루어졌습니다. 한명의 리더의 채널의 지연이 생기면 팀 전체의 의사결정이 지연됩니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--h4&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    하지만, 자기 조직화된 팀에서는 360도로 소통을 합니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--h4&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    관리자의 지시가 아니라 팀원이 스스로 해야 할 일을 계획하고 상호 협력하여 업무를 수행하는 팀의 형태를 자기 조직화된 팀이라고 합니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--h4&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    우리는 이런 팀을 만들어야합니다. 경직된 조직은 리더와 소통합니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--h4&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    다른 개발자와는 잡담은 하지만 일에 있어스는 소통이 잘 이루어지지 않습니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--h4&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    다른 개발자의 일을 잘 모르기 때문에 도와주고 싶어도 못도와 줍니다. 안다고 해도 선뜻 도와주기 쉽지 않습니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    애자일 방법론의 일일 스크럼 회의(Daily Scrum Meeting)을 제안합니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    일일 스크럼 미팅은 4개의 구성요소로 이루어져 있습니다.
   &lt;/p&gt;
   &lt;ul style=&quot;margin: 10px 0px 0px;&quot;&gt;
    &lt;li class=&quot;graf graf--p graf-after--p&quot;&gt;
     어제 한 일
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--p&quot;&gt;
     오늘 할 일
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--p&quot;&gt;
     리스크 공유
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--p&quot;&gt;
     전체상황 공유
    &lt;/li&gt;
   &lt;/ul&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    일(work)에 대해서 기록/트레킹 하는 도구가 있으면 많은 도움이 됩니다. 저는 Atlassian JIRA를 추천합니다. JIRA는 애자일 프로젝트를 관리하는데 최적화 되어있습니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    물론 비즈니스 팀, 전통적인 프로세스, 결재 프로세스등 JIRA를 통해 많은 도구를 통합하면서 줄일 수 있습니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    리스크 및 전체상황을 문서로 공유할 때는 Atlassian Confluence를 추천합니다. Confluence는 Content 중심의 Pages를 협업에 최적화 되어있습니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--pullquote&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    일일 스크럼 Step by Step
   &lt;/p&gt;
   &lt;ul style=&quot;margin: 10px 0px 0px;&quot;&gt;
    &lt;li class=&quot;graf graf--p graf-after--pullquote&quot;&gt;
     주최자가 공유 순서를 정한다.
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--pullquote&quot;&gt;
     한 사람당 발언 시간을 5분을 넘지 않는다.(절충 되어야한다)
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--pullquote&quot;&gt;
     발언 중 끈지않고 끼어들지 않는다.
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--pullquote&quot;&gt;
     발언자는 JIRA, Confluence 또는 다른 도구를 참고하여 어제 한 일, 오늘 할 일, 리스크를 공유한다.
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--pullquote&quot;&gt;
     모든 참여자의 발언이 끝나면 전체 상황을 공유한다.
    &lt;/li&gt;
    &lt;li class=&quot;graf graf--p graf-after--pullquote&quot;&gt;
     오늘 할 일이 무엇이지 모른다면 팀 리더와 또는 스크럼 마스터와 충분한 업무 공유 및 소통을 한다.
    &lt;/li&gt;
   &lt;/ul&gt;
   &lt;p class=&quot;graf graf--p graf-after--pullquote&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    처음부터 잘하는 사람, 팀은 없습니다. 시행착오를 격으면서 소수의 인원과 함께 적용하시기를 바랍니다.
   &lt;/p&gt;
   &lt;h2 class=&quot;graf graf--h4 graf-after--p&quot; id=&quot;id-팀에게애자일조금씩주입하기.-결론&quot; style=&quot;margin: 30px 0px 0px; padding: 0px; font-size: 20px; font-weight: normal; line-height: 1.5; border-bottom-color: rgb(204, 204, 204);&quot;&gt;
    결론
   &lt;/h2&gt;
   &lt;p class=&quot;graf graf--p graf-after--h3&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    이번 글에서는 전통적인 프로세스의 문제점을 해결하기 위해서 애자일 방법론 소개로 시작해서 팀 커뮤니케이션을 개선하기 위해서
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--h3&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    일일 스크럼 회의를 제안했습니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--h3&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    하지만 지금의 일들이 정리가 안되면 내일일도 모르는 상황일 수 있습니다.
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--h3&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    다음 글에서는 애자일 스크럼, 칸반으로 신규 프로젝트와 운영 프로젝트를
   &lt;/p&gt;
   &lt;p class=&quot;graf graf--p graf-after--h3&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; padding: 0px;&quot;&gt;
    어떻게 하면 애자일 스럽게 진행하는지 소개해 보겠습니다.
   &lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;no-print&quot; id=&quot;likes-and-labels-container&quot; style=&quot;margin: 10px 0px; padding: 10px 0px; overflow: hidden; clear: both; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px;&quot;&gt;
   &lt;div id=&quot;likes-section&quot; style=&quot;margin: 0px; padding: 0px; float: left; font-size: 13px; width: 667.672px;&quot;&gt;
    &lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;
    &lt;/div&gt;
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div class=&quot;container_postbtn&quot;&gt;
  &lt;/div&gt;
  &lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
  &lt;/div&gt;
 &lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 13 Jun 2017 22:50:47 +0900</pubDate>
        <link>http://192.168.0.62:4000/agile,%20jira/2017/06/13/tistory-71/</link>
        <guid isPermaLink="true">http://192.168.0.62:4000/agile,%20jira/2017/06/13/tistory-71/</guid>
        
        <category>Agile</category>
        
        <category>Jira</category>
        
        
        <category>Agile, Jira</category>
        
      </item>
    
      <item>
        <title>Jira Project Administration</title>
        <description>&lt;div class=&quot;area_view&quot;&gt;
 &lt;div class=&quot;tt_article_useless_p_margin&quot;&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;b&gt;
     [Jira Project Administration]
    &lt;/b&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    이제 앞에서 열심히 설정했던 내용들을 사용해볼 시간입니다.
    &lt;s&gt;
     아이씐나
    &lt;/s&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    이쯤되면 까먹으셨을테니 다시 캡처를 첨부해보면, 만들었던 Web Customer Support로 들어간 뒤,
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    하단의 Project Administration을 클릭합니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:267px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/0.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;s&gt;
     그리고 다시 시작된 곶통.jpg
    &lt;/s&gt;
    그럼 다음과 같은 화면이 나오며 좌측에 많이 본 듯한 메뉴가 존재합니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    (Subtask Templates의 경우 플러그인이 설치되어있기에 나타난 메뉴입니다)
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;b&gt;
    &lt;i&gt;
     Summary
    &lt;/i&gt;
    :
   &lt;/b&gt;
   우선 Summary부터 보시면 프로젝트의 설정 요약으로써, 해당 프로젝트가 어떤 설정들을 적용받고 있는지를 보여줍니다.
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/1.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   우측의 Edit Proejct를 클릭 시, 해당 프로젝트의 이름, 키값, 프로젝트 아바타 등을 변경할 수있는 팝업창이 생성됩니다.
  &lt;/p&gt;
  &lt;p&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:565px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/2.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   그리고 옆의 Actions를 클릭 시 앞서 설명드렸듯이 프로젝트의 Software타입과 Business타입을 변경할 수 있는 메뉴와
  &lt;/p&gt;
  &lt;p&gt;
   프로젝트 삭제, 인덱싱이 가능한 메뉴가 존재합니다.
  &lt;/p&gt;
  &lt;p&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:222px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/3.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Issue types
    &lt;/i&gt;
    :
   &lt;/b&gt;
   우측의 Actions를 누르면 Edit issue types과 Use a different scheme이 있는데,
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    여기서 Edit issue type을 누를 경우 해당 프로젝트가 적용받고 있는 Issue type scheme을 수정하도록 이동합니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    이것이 이전 단계에서 모든 scheme들을 가능한 새로 만든 이유로써, 누군가 실수로 Default scheme을 수정할 경우
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    다른
   &lt;/span&gt;
   모든 프로젝트도 영향을 받기 때문이죠.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:194px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/4.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   Use a different scheme을 클릭 후 앞서 잘 만들어둔 WCS Issue Type Scheme을 선택한 뒤 OK를 눌러줍니다.
  &lt;/p&gt;
  &lt;p&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:689px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/5.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;b&gt;
    &lt;i&gt;
     Workflows
    &lt;/i&gt;
    :
   &lt;/b&gt;
   Switch Scheme를 클릭 후 이 또한 잘 만들어둔 WCS Workflow Scheme로 바꿔줍니다.
  &lt;/p&gt;
  &lt;p&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:570px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/6.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Screens / Fields
    &lt;/i&gt;
    :
   &lt;/b&gt;
   Issue type과 동일한 화면이므로 생략하겠습니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Versions
    &lt;/i&gt;
    :
   &lt;/b&gt;
   Jira 이슈에 대해 간단한 버전관리를 할 수 있는 메뉴입니다.
  &lt;/div&gt;
  &lt;div&gt;
   Version이나 다음에 나올 Component의 경우 필요에따라 사용하지 않아도 무방합니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;div&gt;
    Version을 사용하기 전에 조건이 있는데,
   &lt;/div&gt;
   &lt;div&gt;
    &lt;br /&gt;
   &lt;/div&gt;
   &lt;ul&gt;
    &lt;li&gt;
     Project Type이 Software타입인지,
    &lt;/li&gt;
    &lt;li&gt;
     Kanban이나 Scrum보드를 사용 중인지,
    &lt;/li&gt;
    &lt;li&gt;
     Permission scheme에Administer Projects, Manage Sprint권한이 있는지
    &lt;/li&gt;
   &lt;/ul&gt;
   &lt;div&gt;
    &lt;br /&gt;
   &lt;/div&gt;
   &lt;div&gt;
    확인이 필요합니다. 우선 본 문서에서는 다음처럼 간단히 v1, v2의 버전 두 개를 추가해보겠습니다.
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/7.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   이후, 스크린에 Fix Versions라는 필드를 추가한 뒤, 이슈를 v1에 추가해줍니다.
  &lt;/p&gt;
  &lt;p&gt;
   &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;
    하나의 이슈에 대해 Fix version은 하나만 할당해야만 하는 점에 주의하세요.
   &lt;/span&gt;
   그렇지않으면 이후 릴리즈 시
  &lt;/p&gt;
  &lt;p&gt;
   이슈 갯수가 꼬여서 보이거나 기타 문제가 발생할 가능성이 있습니다.
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:623px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/8.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    추가 후, Project의 Releases 메뉴를 확인 시 다음처럼 v1에 이슈가 한 개 들어간 것을 확인할 수 있습니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/0.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   v1을 클릭 시 다음처럼 릴리즈 허브가 보여지며, 우측 상단의 Release를 클릭 시 팝업이 생성됩니다.
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/1.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   한 개의 덜 완료된 이슈에 대해 무시하고 릴리즈할 것인지, 다음버전으로 넘길 것인지를 확인하며 여기서 넘길 것을 선택하고 릴리즈 시,
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:818px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/2.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   이렇게 v2로 해당 이슈가 넘어간 것을 확인할 수 있습니다.
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/3.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Componenents
    &lt;/i&gt;
    :
   &lt;/b&gt;
   Project와 Issue사이에 논리적으로 하나의 단계를 두기 위해 사용하는 기능입니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    쉽게 말해서 핸드폰 앱을 개발한다는 가정하에 앱 개발을 프로젝트로 두고,
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   Component에 Android와 Iphone으로 구분하는 것을 생각하시면 됩니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   Component또한 Version과 마찬가지로 간단히 입력하여 추가가 가능하며, 버전과 같은 조건은 필요하지 않습니다.
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    다음처럼 추가하시면 되며, Default Assignee를 설정 시 이슈를 생성할 때 해
   &lt;/span&gt;
   당 Component를 선택하면
  &lt;/div&gt;
  &lt;div&gt;
   자동으로 해당 이슈의 Assignee가 Component Lead에게 할당되도록 설정할 수 있습니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
   &lt;/span&gt;
   &lt;span&gt;
    &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
     &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
      &lt;img src=&quot;/assets/images/70/4.png&quot; /&gt;
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br /&gt;
    &lt;/p&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   그리고 물론 이 또한 스크린에서 Component필드를 추가해주어야합니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:738px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/5.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;p&gt;
     &lt;br /&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br /&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br /&gt;
    &lt;/p&gt;
   &lt;/span&gt;
   &lt;div&gt;
    &lt;b&gt;
     &lt;i&gt;
      User and roles
     &lt;/i&gt;
     :
    &lt;/b&gt;
    권한관리를 조금 더 세분화할 때 사용하는 메뉴로,  굳이 따지자면 그룹보다 한 단계 상위로 보시면됩니다.
   &lt;/div&gt;
   &lt;div&gt;
    물론 이 또한 반드시 사용해야하는 메뉴는 아닙니다.
   &lt;/div&gt;
   &lt;div&gt;
    우선 다음 화면에서 우측 상단의 Edit defaults를 눌러보시면 팝업창이 하나 생성됩니다.
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/70/6.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    보시면 현재 프로젝트의 Project Lead와 Default Assignee를 변경할 수 있으며, Default Assignee를 Project Lead로 설정 시
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    담당자를 지정하지 않은 모든 이슈는 Project Lead에게 할당됩니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;s&gt;
     마음에들지 않는 사람이 있다면 설정하여 메일 폭탄을 선물해보세요
    &lt;/s&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;s&gt;
    &lt;p style=&quot;text-align: center; clear: none; display: inline !important;&quot;&gt;
     &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:549px;;height:auto;max-width:100%&quot;&gt;
      &lt;img src=&quot;/assets/images/70/7.png&quot; /&gt;
     &lt;/span&gt;
    &lt;/p&gt;
   &lt;/s&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;s&gt;
     &lt;p&gt;
      &lt;br /&gt;
     &lt;/p&gt;
     &lt;br /&gt;
    &lt;/s&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;s&gt;
     &lt;br /&gt;
    &lt;/s&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   그 옆의 Add users to role을 선택 시 다음처럼 role에 사용자나 그룹을 할당할 수 있으며, 이 role은
  &lt;/p&gt;
  &lt;p&gt;
   Jira Administrataion - System - Project roles에서 관리가능합니다.
  &lt;/p&gt;
  &lt;p&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:309px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/8.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;b&gt;
    &lt;i&gt;
     Permissions / Issue Security / Notifications
    &lt;/i&gt;
    :
   &lt;/b&gt;
   앞서나온 issue type과 설정방법이 같기에 생략합니다.
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     HipChat integration
    &lt;/i&gt;
    :
   &lt;/b&gt;
   Atlassian의 업무 SNS솔루션인 Hipchat과의 연동을 위한 메뉴입니다.
  &lt;/div&gt;
  &lt;div&gt;
   Slack과의 기능상의 큰 차이는 없으나 대중성에서 밀린 비운의 툴이죠.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;s&gt;
     어차피 slack과의 연동 또한 플러그인으로 되므로 큰 의미는 없습니다만...
    &lt;/s&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;s&gt;
     &lt;br /&gt;
    &lt;/s&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Development tools
    &lt;/i&gt;
    :
   &lt;/b&gt;
   Atlassian의 타 솔루션인 Bamboo, Fisheye등과의 연동을 위한 메뉴입니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Issue collectors
    &lt;/i&gt;
    :
   &lt;/b&gt;
   Jira 이슈에 대한 피드백을 받기위한 메뉴로, 내부 Jira계정을 이용하여 설정 시 만들어지는 html이나
  &lt;/div&gt;
  &lt;div&gt;
   java script코드를 타겟 웹사이트에 심어 피드백을 받을 수 있도록 설정하는 메뉴입니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    마지막으로 위에서 적용한 설정을 검증해보도록 하겠습니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    우선 Task 이슈타입으로 이슈 생성 시, 다음과 같이 기존 Default스크린으로 많은 필드들이 보여집니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/9.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    그럼 이슈타입을 Web Bug로 바꿔보면 어떨까요? 보시다시피 시스템적으로 반드시 들어가는 Proejct와
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    Issue Type을 제외하고 설정하였던 다섯가지의 필드만 보여지는 것을 확인할 수 있습니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    필수값으로 변경하였었던 Web Bug Browser Type도 잘 적용되고 있네요.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    만들어진 이후 View Workflow를 확인 시 워크플로우 또한 새로 만든 워크플로우가 잘 적용됨을 확인할 수 있습니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:818px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/70/10.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    이로써, Jira 설정에 대한 기본 가이드를 정리해보았습니다. 이쯤되면 아시겠지만 딱히 어렵기보단 굉장히 귀찮은 작업입니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    한 번 만들어두면 그 이후엔 나쁘지않으나 초기 세팅시에는 할 일이 꽤나 많죠.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    뒤로 갈수록 재미없어지는 글을 읽으시느라 고생많으셨고, 처음 Jira를 접하고 관리하셔야하는 분들에게 도움이 되었으면 좋겠습니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;s&gt;
     언제가 될 지는 모르나,
    &lt;/s&gt;
    다음에 기회가 된다면 Confluence의 Overview 및 설정도 작성해보도록하겠습니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div class=&quot;container_postbtn&quot;&gt;
  &lt;/div&gt;
  &lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
  &lt;/div&gt;
 &lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 22 Feb 2017 20:25:26 +0900</pubDate>
        <link>http://192.168.0.62:4000/jira,%20alm,%20project%20management/2017/02/22/tistory-70/</link>
        <guid isPermaLink="true">http://192.168.0.62:4000/jira,%20alm,%20project%20management/2017/02/22/tistory-70/</guid>
        
        <category>Jira</category>
        
        <category>JiraAdmin</category>
        
        
        <category>Jira, ALM, Project Management</category>
        
      </item>
    
      <item>
        <title>Jira 설정_9(Schemes)</title>
        <description>&lt;div class=&quot;area_view&quot;&gt;
 &lt;div class=&quot;tt_article_useless_p_margin&quot;&gt;
  &lt;p&gt;
   드디어 마지막인 Scheme부분입니다.
  &lt;/p&gt;
  &lt;p&gt;
   앞서 나왔던 Field scheme이라던가 screen scheme들도 있기에 조금 더 정확히 쓰자면
  &lt;/p&gt;
  &lt;p&gt;
   Issue security, Permission, Notification Scheme입니다만, 제목으론 조금 길어서 scheme으로 적었습니다.
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   그럼 Issue탭 설정의 마지막을 적어보겠습니다.
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Issue security schemes
    &lt;/i&gt;
    :
   &lt;/b&gt;
   생성된 이슈들에 대해서 볼 수 있는 권한을 설정하는 메뉴입니다.
  &lt;/div&gt;
  &lt;div&gt;
   일반적으로 많이 사용하는 메뉴는 아니지만, 설명은 하고 넘어가야겠죠.
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    우선 Add issue Security Scheme를 클릭하여 다음처럼 Test Issue Security Scheme을 생성합니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/69/1.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   그리고 우측의 Security Levels를 클릭 후 다음처럼 Test A와 Test B레벨을 만들어줍니다.
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/69/2.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   그리고 우측의 Add를 클릭하여 해당 레벨에 포함될 사용자, 그룹, Role을 설정합니다.
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:496px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/69/3.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    위와 같이 설정이 완료되었다면, 앞서 Time Tracking과 Linked Issue를 추가하였듯이,
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    스크린에 Security Level필드를 추가하여 레벨을 설정합니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    이후 해당 이슈는 이슈레벨에 맞는 사용자에게만 보여지게됩니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    (만약 해당 기능이 잘 동작하지 않는다면, 이후 설명드릴 Permission schemes의 Set Issue Security부분을 확인해보세요)
   &lt;/span&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:376px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/69/4.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Notificaiton schemes
    &lt;/i&gt;
    :
   &lt;/b&gt;
   이름에서도 감이오듯이, 메일 설정에 관련된 부분입니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    정확하게는 메일 서버가 구성되어있다는 전제하에, 어떤 상태일 때 메일을 발송할지를 지정하는 곳이죠.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    기본적으론 Default Notification Scheme을 사용하며, 필요할 경우 Add Notification Scheme을 클릭하여 각 프로젝트별로 생성합니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    보통 프로젝트별로 사용자나 그룹이 다르기에
   &lt;/span&gt;
   따로 만들어서 사용하는 편이 좋습니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    다음과 같이 새로 만들면,
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:463px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/69/5.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   이런 화면이 나타나며 만들어집니다. 각 이벤트에 대해 우측 Add를 클릭하여 사용자나 그룹, Role등을 지정하면되고,
  &lt;/div&gt;
  &lt;div&gt;
   이벤트 자체의 추가가 필요한 경우, 한참 앞에서 나왔던 Jira Administration - System - Events 메뉴에서 가능합니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/69/6.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Permission schemes
    &lt;/i&gt;
    :
   &lt;/b&gt;
   드디어 마지막으로 권한관리 메뉴입니다. 다시 한 번 상기시켜드리자면 이 메뉴는 프로젝트별로 적용되는 내용으로
  &lt;/div&gt;
  &lt;div&gt;
   Jira 전체에 대한 권한은 Jira Administration - System - Global Permission에서 설정가능합니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   다음처럼 빠르게 하나 만드시면,
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:413px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/69/7.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   대략 이런식으로 Notification scheme처럼 비슷한 화면이 나타나며 우측 Edit로 권한을 부여하시면 됩니다.
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/69/9.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   보통 Jira Software버전을 설치 시, Default Permission Scheme과 Default Software Permission Scheme이 나뉘어져있는데
  &lt;/div&gt;
  &lt;div&gt;
   Default Permission Scheme의 경우 Assignable Users 권한이 jira-developers로 되어있기에
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    가끔 Business타입으로 프로젝트를 생성 시 Assignee에 타 유저가 검색되지 않는 경우가 있으므로 바꿔주는 것을 권장드립니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;s&gt;
     그리고 필자는 귀찮아서 전부 없애고 하나로 통일했다고 합니다
    &lt;/s&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   여기까지 진행하시느라 고생많으셨으며, 다음에서는 여태 설정했던 내용들을
  &lt;/p&gt;
  &lt;p&gt;
   실제 Project에 적용하는 것을 진행해보겠습니다.
  &lt;/p&gt;
  &lt;div class=&quot;container_postbtn&quot;&gt;
  &lt;/div&gt;
  &lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
  &lt;/div&gt;
 &lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 20 Feb 2017 20:25:27 +0900</pubDate>
        <link>http://192.168.0.62:4000/atlassian,%20alm,%20project%20management/2017/02/20/tistory-69/</link>
        <guid isPermaLink="true">http://192.168.0.62:4000/atlassian,%20alm,%20project%20management/2017/02/20/tistory-69/</guid>
        
        <category>Jira</category>
        
        <category>Jira Scheme</category>
        
        
        <category>Atlassian, ALM, Project Management</category>
        
      </item>
    
      <item>
        <title>Jira 설정_8(Time Tracking / Resolution / Priority)</title>
        <description>&lt;div class=&quot;area_view&quot;&gt;
 &lt;div class=&quot;tt_article_useless_p_margin&quot;&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Time tracking
    &lt;/i&gt;
    :
   &lt;/b&gt;
   Jira Issue에서 Time Tracking기능을 사용할지 여부를 결정하는 메뉴입니다.
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    만약 필드에 Time Tracking을 사용하도록 설정하였다면, 이슈를 생성 시 다음과 같이 시간을 설정할 수 있는 필드가 생기며
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    예를 들어 3일짜리 일을 생성할 경우 3d를 입력 후 생성합니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:783px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/68/0.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   그럼 생성된 이슈의 우측에 이렇게 3일이 표시됩니다.
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:510px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/68/1.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   시간을 기록하기 위해선 Sub-Task를 만드는 것처럼 이슈의 More에서 Log Work를 클릭하면 됩니다.
  &lt;/p&gt;
  &lt;p&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:215px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/68/2.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   그리고 하루 일했다는 가정으로 1d를 입력 후 Log를 클릭하면,
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:817px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/68/3.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    이렇게 시간이 계산되는 것을 볼 수 있습니다. 눈치채셨겠지만, 자동으론 안됩니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    물론 이를 자동화해주는 플러그인도 있겠지만,
   &lt;/span&gt;
   기본적으론 되지않지요...
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    또한 사용자가 입력하는 방식이기에 필요하면 악용하기도 쉽습니다. (1시간 일하고 10시간 일했다고 기록한다던가)
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    따라서 이 기능은 참조하는 정도지, 이것을 업무평가의 절대적인 지표로 쓰기에는
   &lt;/span&gt;
   적합하지 않습니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;s&gt;
    무엇보다 Jira에 익숙한 사용자조차도 이걸 입력하는 것은 굉장히 귀찮아요.
   &lt;/s&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:435px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/68/4.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;i&gt;
     Issueu linking
    &lt;/i&gt;
    : Jira Issue에서 Issue linking기능을 사용할지 여부를 결정하는 메뉴입니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    추가로 필요한 link 타입을 추가하거나 삭제할 수도 있죠. 우선 이 link가 무엇인지 설명드리자면
   &lt;/span&gt;
   이슈간의 연결을 나타내는 것으로써,
  &lt;/div&gt;
  &lt;div&gt;
   해당 이슈가 다른 어떤 이슈와 연관되어있는지 혹은 다른 이슈에 의해 진행이 되지 않는지 등을 표시할 수 있습니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    이 또한 Time Tracking처럼 Linked Issue 필드가 설정되어있을 때 이슈 생성 시 보여지게되는데 다음과 같이 is blocked by를 선택 후 이슈를 생성 시 이슈의 상세 페이지에 해당 이슈가 어떤 이슈에 의해 일이 진행되지 않는지를 표시합니다.
   &lt;/span&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:646px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/68/5.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:651px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/68/6.jpg&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   그리고 해당 이슈를 클릭해보면, 이렇게 해당 이슈가 다른 이슈의 진행을 막고있음을 자동으로 표시하게되죠.
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:787px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/68/7.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;b&gt;
    &lt;i&gt;
     Statuses
    &lt;/i&gt;
    :
   &lt;/b&gt;
   Jira의 스테이터스를 추가합니다. 현재 Jira에 존재하는 상태들을 보여주며 추가의 경우 앞서나왔던 워크플로우내에서
  &lt;/p&gt;
  &lt;p&gt;
   Status를 추가하는 것과 같은 내용이므로 넘어가겠습니다.
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/68/9.PNG&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Resolution
    &lt;/i&gt;
    :
   &lt;/b&gt;
   Jira의 필드 중 시스템적으로 설정된 필드 중 하나입니다. 기본적으로 Jira에서는 진행 중인 일을 끝낼 때
  &lt;/div&gt;
  &lt;div&gt;
   (In Progress -&amp;gt; Done으로의 상태 변경) 해당 필드가 포함된 스크린을 띄우도록 하는데,
  &lt;/div&gt;
  &lt;div&gt;
   이 때 해당 이슈가 어떤 방식으로 끝났는지를 선택하게되죠.
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    다음처럼 해당 이슈가 수정되었는지, 수정되지는 않았지만 끝내야만 하는 경우라던지, 중복된 이슈라던지 등을 선택하여
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    차후 해당 이슈가 어떻게 끝났는지를 확인할 수 있게하는 필드입니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:358px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/68/8.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Priorities
    &lt;/i&gt;
    :
   &lt;/b&gt;
   이슈의 긴급도를 설정하는 필드입니다. 이 또한 Resolution처럼 시스템필드이며, 필요에 따라
  &lt;/div&gt;
  &lt;div&gt;
   단계를 더 세분화하거나 간소화할 수 있습니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    기본은 5단계이며, 보통 3단계 정도로 쓰는게 수월합니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;s&gt;
     많이 만들어봐야 어차피 다들 본인 이슈는 다 Highest로 만들거든요. 3단계도 마찬가지긴 하지만...
    &lt;/s&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/68/10.PNG&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   다음은 드디어 이 설정의 마지막인 Scheme들(Issue Security, Permission, Notification)에 관련하여 적어보도록 하겠습니다.
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div class=&quot;container_postbtn&quot;&gt;
  &lt;/div&gt;
  &lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
  &lt;/div&gt;
 &lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 18 Feb 2017 23:37:15 +0900</pubDate>
        <link>http://192.168.0.62:4000/atlassian,%20alm,%20project%20management/2017/02/18/tistory-68/</link>
        <guid isPermaLink="true">http://192.168.0.62:4000/atlassian,%20alm,%20project%20management/2017/02/18/tistory-68/</guid>
        
        <category>Jira</category>
        
        
        <category>Atlassian, ALM, Project Management</category>
        
      </item>
    
      <item>
        <title>Jira 설정_7(Field)</title>
        <description>&lt;div class=&quot;area_view&quot;&gt;
 &lt;div class=&quot;tt_article_useless_p_margin&quot;&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Custom fields
    &lt;/i&gt;
   &lt;/b&gt;
   커스텀 필드를 클릭 시 현재 Jira에서 사용 중인 수정가능한 모든 필드들을 보여줍니다.
  &lt;/div&gt;
  &lt;div&gt;
   보시면 대충 아시겠지만 커스텀필드는 스크린에서 보여지는 필드들이며, 필요한 필드가 있을 경우 추가가 가능합니다.
  &lt;/div&gt;
  &lt;div&gt;

  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    필드 중엔 Locked로 잠겨있는 것들이 존재하는데 이는 시스템이나 플러그인에서 사용 중이며,
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    지워질 경우 Jira에 영향이 갈 만한 것들을 임의로 Jira에서 잠궈둔 것들입니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;

   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    삭제하려면 시스템적으로 수정하여야하며 Locked 상태로 두어도 괜찮으니 무시하셔도 좋습니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    그럼 여기선
    &lt;s&gt;
     다소 억지스럽지만
    &lt;/s&gt;
    Web Bug 브라우저를 고를 Web Bug Browser Type 필드를 만들어보죠.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    우측 상단의 Add Cutom Field를 클릭 시 필드 타입을 고를 수 있는 팝업이 생성됩니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    실제론 그냥 Text Field를 사용하여 입력받겠지만,
    &lt;s&gt;
     재미를 위해
    &lt;/s&gt;
    샘플이니 Select List(multiple choices)를 선택한 뒤 Next를 눌러줍니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/67/0.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   이름과 옵션들을 기입 후 Create로 완료합니다.
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/67/1.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   그럼 이렇게 창이 하나 뜨게 되는데, 지금 만든 필드를 기존의 스크린에 추가할지 여부를 묻는 것으로,
  &lt;/p&gt;
  &lt;p&gt;
   Web Bug Default Screen에 추가해줍니다.
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/67/2.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   만약, 브라우저 타입에 새로운 것을 추가하고 싶을 경우 다음처럼 우측 톱니바퀴모양을 클릭 후 Configure를 통해 변경해주시면 됩니다.
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:180px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/67/3.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;b&gt;
    &lt;i&gt;
     Field configuration
    &lt;/i&gt;
    :
   &lt;/b&gt;
   현재 있는 필드들을 어떤 필드를 사용할지 고를 수 있는 메뉴입니다.
  &lt;/p&gt;
  &lt;p&gt;
   스크린에서 보여지는 필드들은 이 필드 설정을 기반으로하므로, 이 필드설정에서 숨기거나 필수값을 설정할 경우
  &lt;/p&gt;
  &lt;p&gt;
   스크린에도 그대로 반영됩니다.
  &lt;/p&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   여기까지 읽어오셨다면 이제 익숙하시겠죠? Add Field Configuration을 눌러준 뒤 새로 만들어줍니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:554px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/67/4.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    필요할 경우 각각의 필드에 대해 전부 설정해주시면 됩니다만, 이전과 같이
    &lt;s&gt;
     귀찮으므로
    &lt;/s&gt;
    생략하고
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    Web Bug Browser Type의 값을 필수값으로 변경하는 것만 적용해보겠습니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    다음 그림과 같이 Web Bug Brower Type에서 Required를 눌러주면 적용되며 글자가 Optional로 변경됩니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    상태는 둘 중 하나이므로, 현재 Optional일 경우 실제론 Required가 적용되고 있다는 의미죠.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/67/5.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;b&gt;
    &lt;i&gt;
     Field configuration schemes
    &lt;/i&gt;
    :
   &lt;/b&gt;
   앞서 만든 Field configuration을 적용하기 위해 scheme을 만듭니다.
  &lt;/p&gt;
  &lt;p&gt;
   굳이 캡처를 계속 하는 이유는 이름을 정하는데 있어서 가능한 명시적으로 표시하도록 가이드하기 위함이므로
  &lt;/p&gt;
  &lt;p&gt;
   실제 사용 시 귀찮더라도 잘 적어주시는 편이 좋습니다.
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:551px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/67/6.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   그럼 또 익숙한 어디선가 본 듯한 화면이 나옵니다.
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/67/7.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   스크린때처럼 Associate an Issue Type with a Field Configuration을 클릭 후
  &lt;/p&gt;
  &lt;p&gt;
   Web Bug 타입에 대해 해당 필드설정을 사용하도록 설정한 뒤 Add를 클릭합니다.
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:553px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/67/8.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   이로써 필드설정까지 완료되었으며, 다음에는 Time Tracking부터 Priority까지 적도록하겠습니다.
  &lt;/p&gt;
  &lt;div class=&quot;container_postbtn&quot;&gt;
  &lt;/div&gt;
  &lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
  &lt;/div&gt;
 &lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 16 Feb 2017 21:52:37 +0900</pubDate>
        <link>http://192.168.0.62:4000/atlassian,%20alm,%20project%20management/2017/02/16/tistory-67/</link>
        <guid isPermaLink="true">http://192.168.0.62:4000/atlassian,%20alm,%20project%20management/2017/02/16/tistory-67/</guid>
        
        <category>Jira</category>
        
        <category>Jira Admin</category>
        
        <category>Jira Custom Field</category>
        
        
        <category>Atlassian, ALM, Project Management</category>
        
      </item>
    
      <item>
        <title>Jira 설정_6(Screen)</title>
        <description>&lt;div class=&quot;area_view&quot;&gt;
 &lt;div class=&quot;tt_article_useless_p_margin&quot;&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Screen
    &lt;/i&gt;
    :
   &lt;/b&gt;
   스크린을 클릭 시 뭔가
   &lt;s&gt;
    더럽게
   &lt;/s&gt;
   많은 내용이 뜨는 것을 보실 수 있는데, 일단 스크린이란 말 그대로 화면입니다.
  &lt;/div&gt;
  &lt;div&gt;
   여기서 화면이란 다음처럼 이슈를 생성 시 보여지는 팝업 창 그 자체라고 생각하시면됩니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    이 팝업창을 보시면 아시겠지만, 뭔가 필드(Summary, Due Date등)가 굉장히 많이 있는 것을 확인할 수 있으며,
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    스크린은 해당 필드들을 화면에서 숨기거나 보여주고 싶은 필드를 설정하는 등의 설정입니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:819px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/66/0.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   앞서 해왔듯이 우측 상단의 Add Screen버튼을 클릭하여 다음과 같이 새로운 스크린을 하나 추가합니다.
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:548px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/66/1.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;br /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    그럼 아무것도 없는 화면이 나오며, 하단의 Select Field를 눌러서 다음처럼 기본적으로 필요한 몇 가지를 설정해줍니다.
   &lt;/span&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:291px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/66/2.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;div&gt;
    &lt;br /&gt;
   &lt;/div&gt;
   &lt;div&gt;
    &lt;b&gt;
     &lt;i&gt;
      Screen schemes
     &lt;/i&gt;
     :
    &lt;/b&gt;
    Scheme을 추가하기 전에 한 가지 짚고 넘어가야할 것이 있는데
   &lt;/div&gt;
   &lt;div&gt;
    Screen, Screen schemes, Issue type screen schemes의 세 가지의 관계에 대해서입니다.
   &lt;/div&gt;
   &lt;div&gt;
    &lt;br /&gt;
   &lt;/div&gt;
   &lt;div&gt;
    앞의 이슈타입과 워크플로우와는 다르게 스크린과 이후 나올 필드의 경우 세 가지로 나뉘어있는데,
   &lt;/div&gt;
   &lt;div&gt;
    스크린은 앞에서 보신 바와 같이 팝업창 그 자체라고 보시면됩니다.
   &lt;/div&gt;
   &lt;div&gt;
    그럼 Screen schemes와 Issue type screen schemes의 차이는 무엇인가인데,
   &lt;/div&gt;
   &lt;div&gt;
    &lt;br /&gt;
   &lt;/div&gt;
   &lt;ul&gt;
    &lt;ul&gt;
     &lt;li&gt;
      Screen schemes은 해당 scheme을 사용 시 Create, Edit, View 시에 각각 어떤 스크린이 기본적으로 보여질 것인지
     &lt;/li&gt;
     &lt;li&gt;
      Issue type screen schemes은 각 이슈타입별로 어떤 Screen schemes을 사용할 것인지
     &lt;/li&gt;
    &lt;/ul&gt;
   &lt;/ul&gt;
   &lt;div&gt;
    입니다.
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;div&gt;
    &lt;br /&gt;
   &lt;/div&gt;
   &lt;div&gt;
    차후
    &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;
     프로젝트설정에서는 Issue type screen schemes을 선택
    &lt;/span&gt;
    하게됩니다.  설명을 들을 때는 쉽지만 실제로 적용하려하면
   &lt;/div&gt;
   &lt;div&gt;
    꽤나 헷갈리는 부분이 되기에 몇 번의 연습이 필요합니다. (
    &lt;s&gt;
     본인도 자주 헷갈림
    &lt;/s&gt;
    )
   &lt;/div&gt;
   &lt;div&gt;
    &lt;br /&gt;
   &lt;/div&gt;
   &lt;div&gt;
    백문이불여일타라고, 다음과 같이 scheme도 추가해줍니다.
   &lt;/div&gt;
   &lt;div&gt;
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:552px;text-align: center;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/66/3.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;p&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;div&gt;
    그럼 다음과 같이 scheme 생성되며, 기본 스크린으로는 Web Bug Default Screen을 사용함을 알 수 있습니다.
   &lt;/div&gt;
   &lt;div&gt;
    여기서의 기본이란 해당 scheme을 사용 시 모든 보여지는 스크린을 Web Bug Default Screen으로 하겠다는 의미이며,
   &lt;/div&gt;
   &lt;div&gt;
    만약 이슈 생성, 수정, 뷰의 화면을 전부 다르게 하고싶을 경우 우측상단의 Associate an Issue Operation with a Screen을 클릭하여
   &lt;/div&gt;
   &lt;div&gt;
    다른 스크린을 할당해줍니다.
   &lt;/div&gt;
   &lt;div&gt;
    &lt;br /&gt;
   &lt;/div&gt;
   &lt;div&gt;
    물론 본 문서에서는
    &lt;s&gt;
     귀찮으므로
    &lt;/s&gt;
    생략합니다.
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/66/4.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   &lt;p&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   &lt;p&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   &lt;p&gt;
   &lt;/p&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;div&gt;
    &lt;b&gt;
     &lt;i&gt;
      Issue tpye Screen schemes
     &lt;/i&gt;
     :
    &lt;/b&gt;
    해당 Scheme에 대해선 앞에서 설명드렸으므로 바로 만들어봅니다. 다만, Screen Scheme을 기본을 Web Bug Screen Scheme으로 둘 경우 Web Bug타입과 다른 타입과의 비교가 되지않으므로 Default Screen Scheme을 할당해줍니다.
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:549px;text-align: center;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/66/5.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;p&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   그럼 이와 같은 화면이 나오며, 우린 Web Bug타입에 대해 다른 스크린을 써야하므로 우측 상단의
  &lt;/div&gt;
  &lt;div&gt;
   Associate an Issue Type with a Screen Scheme을 클릭합니다.
  &lt;/div&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/66/6.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   그리고 이걸 이렇게 추가하여 Add를 눌러주시면...
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:548px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/66/7.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   이렇게 추가되며, Web Bug 이슈타입엔 Web Bug용 스크린을, 그 외엔 기본 Jira 스크린을 사용하도록 설정이 완료됩니다.
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/66/8.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   다음은 필드 설정에 대해 기술하도록하겠습니다.
  &lt;/p&gt;
  &lt;div class=&quot;container_postbtn&quot;&gt;
  &lt;/div&gt;
  &lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
  &lt;/div&gt;
 &lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 14 Feb 2017 22:59:26 +0900</pubDate>
        <link>http://192.168.0.62:4000/opensourceconsulting/2017/02/14/tistory-66/</link>
        <guid isPermaLink="true">http://192.168.0.62:4000/opensourceconsulting/2017/02/14/tistory-66/</guid>
        
        <category>Jira</category>
        
        <category>Jira Screen</category>
        
        <category>Jira Admin</category>
        
        
        <category>OpenSourceConsulting</category>
        
      </item>
    
      <item>
        <title>Jira 설정_5(Workflow)</title>
        <description>&lt;div class=&quot;area_view&quot;&gt;
 &lt;div class=&quot;tt_article_useless_p_margin&quot;&gt;
  &lt;div&gt;
   &lt;b&gt;
    &lt;i&gt;
     Workflow
    &lt;/i&gt;
    :
   &lt;/b&gt;
   워크플로우는 앞에서 프로젝트 생성 시 잠깐 보셨을텐데, 일반적으로 사용하는 프로세스와 같은 의미라고 생각하시면 됩니다.
  &lt;/div&gt;
  &lt;div&gt;
   예를 들어 현실에서의 결재라인이죠. 아시다시피, 프로세스는 각 업무별로 진행되는 과정이 다릅니다.
  &lt;/div&gt;
  &lt;div&gt;
   기획팀 내부의 일을 처리하는데 개발팀의 프로세스를 탈 필요가 없는 것처럼요.
  &lt;/div&gt;
  &lt;div&gt;
   이에 따라 각 이슈타입별로 다른 워크플로우를 설정할 수 있게되어있습니다.
  &lt;/div&gt;
  &lt;div&gt;
   다음 그림과 같이, 프로젝트를 생성 시 각 프로젝트별로 기본적으로 워크플로우가 따로 생성되어지는 것을 확인할 수 있습니다.
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/65/0.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    보시면 현재 사용하고 있는 워크플로우, 마지막 수정일자, 할당되어있는 scheme, 워크플로우의 단계(상태레벨이 몇 개인지),
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    워크플로우 수정이 있습니다. View를 눌러보시면 다음과 같이 해당 워크플로우가 어떻게 동작하는지를 확인할 수 있죠.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    Diagram 형태로도, Text형태로도 볼 수 있으며 필요 시 잘 구성된 워크플로우를 Export하여 타 시스템에서도 써먹을 수 있습니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/65/1.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div&gt;
   &lt;span&gt;
    본제로 돌아와서, 앞서 만든 WCS(Web Customer Support)프로젝트에 새로운 워크플로우를 추가해보겠습니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    우측 상단의 Add Workflow를 클릭 시 다음과 같은 팝업이 생성되며, 이름을 지정 후 Add를 클릭합니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    안타깝게도 여기선 한글은 지원하지 않으므로 영어로 만드셔야하며, 차후 워크플로우가 늘어날 경우 보기에 어려워지므로
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span&gt;
    &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;
     반드시 이름을 구분이 쉽도록 명확히 지정
    &lt;/span&gt;
    하셔야합니다.
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;p&gt;
  &lt;/p&gt;
  &lt;div&gt;
   본 문서에서는 앞에서 만든 Web Bug타입의 워크플로우를 생성할 것이므로 다음과 같이 만들어보겠습니다.
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:553px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/65/3.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   그럼 다음과 같이 아주 심플한 워크플로우가 생성됩니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:361px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/65/4.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;div&gt;
    상태가 오픈만 있으므로, Fix라는 상태를 하나 생성해봅니다. 방법은 Add status를 클릭하면되며,
   &lt;/div&gt;
   &lt;div&gt;
    기존에 존재하는 상태를 선택하거나 새로운 상태를 생성할 수 있습니다.
   &lt;/div&gt;
   &lt;div&gt;
    Fixed의 경우 없었던 상태이므로 다음처럼 new status라는 내용이 나오며 엔터키로 입력 후 Add를 클릭합니다.
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:368px;text-align: center;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/65/5.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;p&gt;
    그럼 다음과 같이 다시 팝업이 생성되며, 카테고리를 지정하도록 나옵니다. Fixed의 경우 Done으로 분류될 것이기에
   &lt;/p&gt;
   &lt;p&gt;
    Done으로 선택 후 Create를 눌러줍니다.
   &lt;/p&gt;
   &lt;div&gt;
    안타깝지만 카테고리의 경우, 시스템에 하드코딩되어있는 부분이기에 간단히 추가는 어려우며 본 문서에서는 넘어가겠습니다.
   &lt;/div&gt;
   &lt;div&gt;
    (
    &lt;s&gt;
     필요 시 구글신에게 물어보세요)
    &lt;/s&gt;
   &lt;/div&gt;
   &lt;div&gt;
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:557px;text-align: center;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/65/6.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;p&gt;
    아무튼 만들어지면 뭔가 오른쪽에 빨간색 느낌표와 함께 워닝이 뜹니다.
   &lt;/p&gt;
   &lt;p&gt;
    이는 해당 스테이터스로 이동할 수 있는 연결이 없다는 의미인데 여기서 Add Transition을 눌러주셔도 되고
   &lt;/p&gt;
   &lt;div&gt;
    다음과 같이 스테이터스에 마우스를 올릴 시 나타나는 원형에서 드래그하여 타 스테이터스로 이동 시 새로운 팝업이 생성됩니다.
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:325px;text-align: center;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/65/7.png&quot; /&gt;
    &lt;/span&gt;
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:559px;text-align: center;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/65/8.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;p&gt;
    위처럼 어떤 상태로부터 어떤 상태로 이동할 것인지, 그리고 그 이름은 무엇이 될 것인지를 지정합니다.
   &lt;/p&gt;
   &lt;p&gt;
    여기선 open에서 fixed상태로 이동할 것이므로 간단히 fix라고 하겠습니다.
   &lt;/p&gt;
   &lt;div&gt;
    Screen의 경우, 상태를 Open에서 Fixed로 이동할 때 특정 팝업창을 띄울 것인지 여부를 정하는 내용으로
   &lt;/div&gt;
   &lt;div&gt;
    Screen은 이 다음에 설명드릴 내용으므로 여기선 기본인 None으로 설정합니다.
   &lt;/div&gt;
   &lt;div&gt;
    &lt;br /&gt;
   &lt;/div&gt;
   &lt;div&gt;
    그럼 이렇게 Transition이 추가됩니다.
   &lt;/div&gt;
   &lt;div&gt;
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:348px;text-align: center;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/65/10.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   샘플 워크플로우이기도 하고 상태가 많으면
   &lt;s&gt;
    귀찮으므로
   &lt;/s&gt;
   이 워크플로우를 사용하도록 하고 넘어가도록 하겠습니다.
  &lt;/div&gt;
  &lt;div&gt;
   농담도 들어있었지만 실제로 새로 Jira를 도입 시 워크플로우를
   &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;
    최대한 간소화
   &lt;/span&gt;
   하는 것은 굉장히 중요합니다.
  &lt;/div&gt;
  &lt;div&gt;
   처음에 의욕이 앞서서 많은 복잡다단한 절차를 만들어도, 실제 사용자들이 사용하기엔 어렵고 불편하기에 접근이 어렵기 때문이죠.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;div&gt;
    반드시 필요한 절차가 아닐 경우, 사용에 익숙해진 이후에 도입해도 늦지 않습니다.
   &lt;/div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;div&gt;
    &lt;b&gt;
     &lt;i&gt;
      Workflow Schemes
     &lt;/i&gt;
     :
    &lt;/b&gt;
    앞에서 만든 워크플로우를 써먹기 위해선 이 Scheme을 지정해야합니다.
   &lt;/div&gt;
   &lt;div&gt;
    Workflow scheme도 워크플로우와 같이 프로젝트 생성 시 기본적으로 생성됩니다.
   &lt;/div&gt;
   &lt;div&gt;
    &lt;br /&gt;
   &lt;/div&gt;
   &lt;div&gt;
    &lt;span&gt;
     필요 시 우측 상단의 Add Workflow Scheme버튼을 눌러서 새로 생성이 가능합니다만, Workflow와 다른 점은
    &lt;/span&gt;
   &lt;/div&gt;
   &lt;div&gt;
    &lt;span&gt;
     여러 개를 만들어봐야 실제로 사용할 것은 하나라는 점을 상기하셔야합니다.
    &lt;/span&gt;
   &lt;/div&gt;
   &lt;div&gt;
    &lt;span&gt;
     &lt;br /&gt;
    &lt;/span&gt;
   &lt;/div&gt;
   &lt;div&gt;
    &lt;span&gt;
     앞에서도 설명드렸지만, 결국 Jira의 프로젝트 설정이란, 여기서 만들어진 Scheme들에 Associate되는 형태로써
    &lt;/span&gt;
   &lt;/div&gt;
   &lt;div&gt;
    &lt;span&gt;
     한 번에 하나의 Scheme설정만 적용받기 때문이죠.
    &lt;/span&gt;
   &lt;/div&gt;
   &lt;div&gt;
    &lt;span&gt;
     &lt;br /&gt;
    &lt;/span&gt;
   &lt;/div&gt;
   &lt;div&gt;
    &lt;span&gt;
     따라서 원래는 새로운 Scheme을 추가할 필요는 없지만, 그래도 처음 사용자를 위한 문서이니 한 번 추가해보겠습니다.
    &lt;/span&gt;
   &lt;/div&gt;
   &lt;p&gt;
   &lt;/p&gt;
   &lt;div&gt;
    &lt;span&gt;
     Add Workflow Scheme버튼을 클릭 후 다음처럼 새로운 Scheme을 생성합니다.
    &lt;/span&gt;
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:552px;text-align: center;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/65/11.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;p&gt;
    그럼 이런 화면이 나오며, 해당 워크플로우 이름이 마음에 안들 경우 수정할 수도 있습니다.
   &lt;/p&gt;
   &lt;div&gt;
    워크플로우를 추가하기 위해, Add Workflow를 클릭 후 Add Existing을 클릭해줍니다.
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/65/12.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   &lt;p&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   &lt;p&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   &lt;p&gt;
    여기선 앞에서 만든 Web Bug워크플로우를 선택 후, next를 눌러줍니다.
   &lt;/p&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/65/13.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   그리고 이 워크플로우를 적용받을 이슈타입을 선택합니다. Web Bug타입용으로 만든 워크플로우이므로 해당 타입을 선택 후 마무리합니다.
   &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:552px;text-align: center;;height:auto;max-width:100%&quot;&gt;
    &lt;img src=&quot;/assets/images/65/14.png&quot; /&gt;
   &lt;/span&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;div&gt;
    그럼 이렇게 Workflow Scheme에 워크플로우가 추가된 것을 볼 수 있습니다.
   &lt;/div&gt;
   &lt;div&gt;
    의미는 Web Bug이슈타입은 새로 추가한 워크플로우를, 그 외의 모든 이슈타입은 jira의 기본 워크플로우를 타라는 의미죠.
   &lt;/div&gt;
   &lt;div&gt;
    현재는 해당 Scheme이 어떤 프로젝트에서도 쓰이지 않기 때문에 Inactive에 분류되어있는 것을 볼 수 있으며, 프로젝트에서 해당 Scheme을 사용 시 자동으로 Active로 이동됩니다.
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/65/15.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;p&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   중요한 것으로 만약 사용 중인 워크플로우를 수정 시, 다음처럼 경고창이 발생하며 경고창에서
   &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;
    꼭 Publish를 눌러주시기 바랍니다
   &lt;/span&gt;
   .
  &lt;/div&gt;
  &lt;div&gt;
   그렇지 않으면 적용이 안되거든요.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;
    &lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;
     &lt;img src=&quot;/assets/images/65/16.png&quot; /&gt;
    &lt;/span&gt;
   &lt;/p&gt;
   &lt;p&gt;
    &lt;br /&gt;
   &lt;/p&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   여기까지 Workflow에 대해서 기술하였고 다음 문서에서는 Screen으로 넘어가도록하겠습니다.
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;div&gt;
   &lt;br /&gt;
  &lt;/div&gt;
  &lt;p&gt;
   &lt;br /&gt;
  &lt;/p&gt;
  &lt;div class=&quot;container_postbtn&quot;&gt;
  &lt;/div&gt;
  &lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
  &lt;/div&gt;
 &lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 12 Feb 2017 00:35:05 +0900</pubDate>
        <link>http://192.168.0.62:4000/atlassian,%20jira,%20alm,%20project%20management/2017/02/12/tistory-65/</link>
        <guid isPermaLink="true">http://192.168.0.62:4000/atlassian,%20jira,%20alm,%20project%20management/2017/02/12/tistory-65/</guid>
        
        <category>Jira</category>
        
        <category>Jira Workflow</category>
        
        <category>Workflow</category>
        
        
        <category>Atlassian, Jira, ALM, Project Management</category>
        
      </item>
    
  </channel>
</rss>
